

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Feb 11 10:13:51 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000E                     	;# 
   200  000F                     	;# 
   201  0010                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0013                     	;# 
   205  0014                     	;# 
   206  0015                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001D                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  0081                     	;# 
   220  0085                     	;# 
   221  0086                     	;# 
   222  0087                     	;# 
   223  0088                     	;# 
   224  0089                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0008                     _PORTD	set	8
   365  0013                     _SSPBUF	set	19
   366  0049                     _RE1	set	73
   367  004A                     _RE2	set	74
   368  00A5                     _SSPEN	set	165
   369  00A3                     _SSPM3	set	163
   370  0088                     _TRISD	set	136
   371  0091                     _SSPCON2	set	145
   372  0093                     _SSPADD	set	147
   373  0449                     _TRISE1	set	1097
   374  044A                     _TRISE2	set	1098
   375  048E                     _ACKSTAT	set	1166
   376  048C                     _ACKEN	set	1164
   377  048D                     _ACKDT	set	1165
   378  048B                     _RCEN	set	1163
   379  048A                     _PEN	set	1162
   380  0488                     _SEN	set	1160
   381  04A2                     _R_nW	set	1186
   382                           
   383                           	psect	strings
   384  0003                     __pstrings:
   385  0003                     stringtab:
   386  0003                     __stringtab:
   387                           
   388                           ;	String table - string pointers are 1 byte each
   389  0003  1BFF               	btfsc	btemp+1,7
   390  0004  280D               	ljmp	stringcode
   391  0005  1383               	bcf	3,7
   392  0006  187F               	btfsc	btemp+1,0
   393  0007  1783               	bsf	3,7
   394  0008  0800               	movf	0,w
   395  0009  0A84               	incf	4,f
   396  000A  1903               	skipnz
   397  000B  0AFF               	incf	btemp+1,f
   398  000C  0008               	return
   399  000D                     stringcode:
   400  000D                     stringdir:
   401  000D  3000               	movlw	high stringdir
   402  000E  008A               	movwf	10
   403  000F  0804               	movf	4,w
   404  0010  0A84               	incf	4,f
   405  0011  0782               	addwf	2,f
   406  0012                     __stringbase:
   407  0012  3400               	retlw	0
   408  0013                     __end_of__stringtab:
   409  0013                     STR_1:
   410  0013  3420               	retlw	32	;' '
   411  0014  3420               	retlw	32	;' '
   412  0015  3444               	retlw	68	;'D'
   413  0016  3453               	retlw	83	;'S'
   414  0017  3431               	retlw	49	;'1'
   415  0018  3433               	retlw	51	;'3'
   416  0019  3430               	retlw	48	;'0'
   417  001A  3437               	retlw	55	;'7'
   418  001B  3420               	retlw	32	;' '
   419  001C  3420               	retlw	32	;' '
   420  001D  3454               	retlw	84	;'T'
   421  001E  3445               	retlw	69	;'E'
   422  001F  3453               	retlw	83	;'S'
   423  0020  3454               	retlw	84	;'T'
   424  0021  3420               	retlw	32	;' '
   425  0022  3420               	retlw	32	;' '
   426  0023  3400               	retlw	0
   427                           
   428                           	psect	cinit
   429  07FC                     start_initialization:	
   430                           ; #config settings
   431                           
   432  07FC                     __initialization:
   433  07FC                     end_of_initialization:	
   434                           ;End of C runtime variable initialization code
   435                           
   436  07FC                     __end_of__initialization:
   437  07FC  0183               	clrf	3
   438  07FD  120A  118A  2D4B   	ljmp	_main	;jump to C main() function
   439                           
   440                           	psect	cstackCOMMON
   441  0070                     __pcstackCOMMON:
   442  0070                     ?_read_ds1307:
   443  0070                     ?_init_ds1307:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_init_clcd:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_i2c_stop:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ??_i2c_stop:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_display_time:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_get_time:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_init_config:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_main:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_i2c_wait_for_idle:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ??_i2c_wait_for_idle:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_i2c_start:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ??_i2c_start:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_i2c_rep_start:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ??_i2c_rep_start:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_i2c_read:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ??_i2c_read:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ??_i2c_write:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_clcd_write:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_init_display_controller:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_i2c_write:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?___lldiv:	
   504                           ; 2 bytes @ 0x0
   505                           
   506  0070                     i2c_write@data:	
   507                           ; 4 bytes @ 0x0
   508                           
   509  0070                     clcd_write@mode:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ___lldiv@divisor:	
   513                           ; 1 bytes @ 0x0
   514                           
   515                           
   516                           ; 4 bytes @ 0x0
   517  0070                     	ds	1
   518  0071                     ?_write_ds1307:
   519  0071                     ??_clcd_write:	
   520                           ; 1 bytes @ 0x1
   521                           
   522  0071                     i2c_read@ack:	
   523                           ; 1 bytes @ 0x1
   524                           
   525  0071                     write_ds1307@data:	
   526                           ; 1 bytes @ 0x1
   527                           
   528                           
   529                           ; 1 bytes @ 0x1
   530  0071                     	ds	1
   531  0072                     ??_write_ds1307:
   532  0072                     i2c_read@data:	
   533                           ; 1 bytes @ 0x2
   534                           
   535  0072                     write_ds1307@addr:	
   536                           ; 1 bytes @ 0x2
   537                           
   538                           
   539                           ; 1 bytes @ 0x2
   540  0072                     	ds	1
   541  0073                     ??_read_ds1307:
   542  0073                     clcd_write@byte:	
   543                           ; 1 bytes @ 0x3
   544                           
   545                           
   546                           ; 1 bytes @ 0x3
   547  0073                     	ds	1
   548  0074                     ?_clcd_print:
   549  0074                     ??_init_display_controller:	
   550                           ; 1 bytes @ 0x4
   551                           
   552  0074                     read_ds1307@addr:	
   553                           ; 1 bytes @ 0x4
   554                           
   555  0074                     clcd_print@str:	
   556                           ; 1 bytes @ 0x4
   557                           
   558  0074                     ___lldiv@dividend:	
   559                           ; 2 bytes @ 0x4
   560                           
   561                           
   562                           ; 4 bytes @ 0x4
   563  0074                     	ds	1
   564  0075                     read_ds1307@data:
   565                           
   566                           ; 1 bytes @ 0x5
   567  0075                     	ds	1
   568  0076                     ??_init_ds1307:
   569  0076                     ??_init_clcd:	
   570                           ; 1 bytes @ 0x6
   571                           
   572  0076                     ??_get_time:	
   573                           ; 1 bytes @ 0x6
   574                           
   575  0076                     clcd_print@addr:	
   576                           ; 1 bytes @ 0x6
   577                           
   578                           
   579                           ; 1 bytes @ 0x6
   580  0076                     	ds	1
   581  0077                     ??_clcd_print:
   582  0077                     ??_display_time:	
   583                           ; 1 bytes @ 0x7
   584                           
   585  0077                     get_time@clock_reg:	
   586                           ; 1 bytes @ 0x7
   587                           
   588  0077                     init_ds1307@dummy:	
   589                           ; 1 bytes @ 0x7
   590                           
   591                           
   592                           ; 1 bytes @ 0x7
   593  0077                     	ds	1
   594  0078                     ??___lldiv:
   595                           
   596                           ; 1 bytes @ 0x8
   597  0078                     	ds	1
   598  0079                     ___lldiv@quotient:
   599                           
   600                           ; 4 bytes @ 0x9
   601  0079                     	ds	4
   602  007D                     ___lldiv@counter:
   603                           
   604                           ; 1 bytes @ 0xD
   605  007D                     	ds	1
   606  007E                     ??_main:
   607                           
   608                           	psect	cstackBANK0
   609  0020                     __pcstackBANK0:	
   610                           ; 1 bytes @ 0xE
   611                           
   612  0020                     ?_init_i2c:
   613  0020                     init_i2c@baud:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0020                     display_time@time:	
   617                           ; 4 bytes @ 0x0
   618                           
   619                           
   620                           ; 9 bytes @ 0x0
   621  0020                     	ds	4
   622  0024                     ??_init_i2c:
   623                           
   624                           ; 1 bytes @ 0x4
   625  0024                     	ds	4
   626  0028                     ??_init_config:
   627                           
   628                           ; 1 bytes @ 0x8
   629  0028                     	ds	1
   630  0029                     display_time@clock_reg:
   631                           
   632                           ; 1 bytes @ 0x9
   633  0029                     	ds	1
   634  002A                     main@clock_reg:
   635                           
   636                           ; 3 bytes @ 0xA
   637  002A                     	ds	3
   638                           
   639                           	psect	maintext
   640  054B                     __pmaintext:	
   641 ;;
   642 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   643 ;;
   644 ;; *************** function _main *****************
   645 ;; Defined at:
   646 ;;		line 54 in file "main.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;  clock_reg       3   10[BANK0 ] unsigned char [3]
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   655 ;; Tracked objects:
   656 ;;		On entry : B00/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         0       0       0       0       0
   661 ;;      Locals:         0       3       0       0       0
   662 ;;      Temps:          0       0       0       0       0
   663 ;;      Totals:         0       3       0       0       0
   664 ;;Total ram usage:        3 bytes
   665 ;; Hardware stack levels required when called: 6
   666 ;; This function calls:
   667 ;;		_display_time
   668 ;;		_get_time
   669 ;;		_init_config
   670 ;; This function is called by:
   671 ;;		Startup code after reset
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           
   676                           ;psect for function _main
   677  054B                     _main:
   678  054B                     l1054:	
   679                           ;incstack = 0
   680                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   681                           
   682                           
   683                           ;main.c: 55: }
   684  054B  120A  118A  25E1  120A  118A  	fcall	_init_config
   685  0550                     l1056:
   686  0550  302A               	movlw	(low (main@clock_reg| 0))& (0+255)
   687  0551  120A  118A  25BA  120A  118A  	fcall	_get_time
   688  0556                     l1058:
   689  0556  302A               	movlw	(low (main@clock_reg| 0))& (0+255)
   690  0557  120A  118A  2731  120A  118A  	fcall	_display_time
   691  055C  2D50               	goto	l1056
   692  055D  120A  118A  2800   	ljmp	start
   693  0560                     __end_of_main:
   694                           
   695                           	psect	text1
   696  05E1                     __ptext1:	
   697 ;; *************** function _init_config *****************
   698 ;; Defined at:
   699 ;;		line 46 in file "main.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0
   715 ;;      Temps:          0       1       0       0       0
   716 ;;      Totals:         0       1       0       0       0
   717 ;;Total ram usage:        1 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; Hardware stack levels required when called: 5
   720 ;; This function calls:
   721 ;;		_clcd_print
   722 ;;		_init_clcd
   723 ;;		_init_ds1307
   724 ;;		_init_i2c
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function _init_config
   732  05E1                     _init_config:
   733  05E1                     l1050:	
   734                           ;incstack = 0
   735                           ; Regs used in _init_config: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   736                           
   737                           
   738                           ;main.c: 47: 
   739  05E1  3000               	movlw	0
   740  05E2  1283               	bcf	3,5	;RP0=0, select bank0
   741  05E3  1303               	bcf	3,6	;RP1=0, select bank0
   742  05E4  00A3               	movwf	init_i2c@baud+3
   743  05E5  3001               	movlw	1
   744  05E6  00A2               	movwf	init_i2c@baud+2
   745  05E7  3086               	movlw	134
   746  05E8  00A1               	movwf	init_i2c@baud+1
   747  05E9  30A0               	movlw	160
   748  05EA  00A0               	movwf	init_i2c@baud
   749  05EB  120A  118A  2666  120A  118A  	fcall	_init_i2c
   750                           
   751                           ;main.c: 48:     while (1) {
   752  05F0  120A  118A  2560  120A  118A  	fcall	_init_ds1307
   753                           
   754                           ;main.c: 50: 
   755  05F5  120A  118A  2533  120A  118A  	fcall	_init_clcd
   756  05FA                     l1052:
   757                           
   758                           ;main.c: 51:         display_time(clock_reg);
   759  05FA  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   760  05FB  00F4               	movwf	clcd_print@str
   761  05FC  3080               	movlw	128
   762  05FD  00F5               	movwf	clcd_print@str+1
   763  05FE  3080               	movlw	128
   764  05FF  1283               	bcf	3,5	;RP0=0, select bank0
   765  0600  1303               	bcf	3,6	;RP1=0, select bank0
   766  0601  00A8               	movwf	??_init_config
   767  0602  0828               	movf	??_init_config,w
   768  0603  00F6               	movwf	clcd_print@addr
   769  0604  120A  118A  2637  120A  118A  	fcall	_clcd_print
   770  0609                     l19:
   771  0609  0008               	return
   772  060A                     __end_of_init_config:
   773                           
   774                           	psect	text2
   775  0666                     __ptext2:	
   776 ;; *************** function _init_i2c *****************
   777 ;; Defined at:
   778 ;;		line 4 in file "i2c.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  baud            4    0[BANK0 ] unsigned long 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0, pclath, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       4       0       0       0
   793 ;;      Locals:         0       0       0       0       0
   794 ;;      Temps:          0       4       0       0       0
   795 ;;      Totals:         0       8       0       0       0
   796 ;;Total ram usage:        8 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; Hardware stack levels required when called: 1
   799 ;; This function calls:
   800 ;;		___lldiv
   801 ;; This function is called by:
   802 ;;		_init_config
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           
   807                           ;psect for function _init_i2c
   808  0666                     _init_i2c:
   809  0666                     l1014:	
   810                           ;incstack = 0
   811                           ; Regs used in _init_i2c: [wreg+status,2+status,0+pclath+cstack]
   812                           
   813                           
   814                           ;i2c.c: 4: void init_i2c(unsigned long baud);i2c.c: 5: {;i2c.c: 7:     SSPM3 = 1;
   815  0666  1283               	bcf	3,5	;RP0=0, select bank0
   816  0667  1303               	bcf	3,6	;RP1=0, select bank0
   817  0668  1594               	bsf	20,3	;volatile
   818  0669                     l1016:
   819                           
   820                           ;i2c.c: 10:     SSPADD = (unsigned char)(20000000 / (4 * baud)) - 1;
   821  0669  0820               	movf	init_i2c@baud,w
   822  066A  00A4               	movwf	??_init_i2c
   823  066B  0821               	movf	init_i2c@baud+1,w
   824  066C  00A5               	movwf	??_init_i2c+1
   825  066D  0822               	movf	init_i2c@baud+2,w
   826  066E  00A6               	movwf	??_init_i2c+2
   827  066F  0823               	movf	init_i2c@baud+3,w
   828  0670  00A7               	movwf	??_init_i2c+3
   829  0671  3002               	movlw	2
   830  0672                     u335:
   831  0672  1003               	clrc
   832  0673  0DA4               	rlf	??_init_i2c,f
   833  0674  0DA5               	rlf	??_init_i2c+1,f
   834  0675  0DA6               	rlf	??_init_i2c+2,f
   835  0676  0DA7               	rlf	??_init_i2c+3,f
   836  0677                     u330:
   837  0677  3EFF               	addlw	-1
   838  0678  1D03               	skipz
   839  0679  2E72               	goto	u335
   840  067A  0827               	movf	??_init_i2c+3,w
   841  067B  00F3               	movwf	___lldiv@divisor+3
   842  067C  0826               	movf	??_init_i2c+2,w
   843  067D  00F2               	movwf	___lldiv@divisor+2
   844  067E  0825               	movf	??_init_i2c+1,w
   845  067F  00F1               	movwf	___lldiv@divisor+1
   846  0680  0824               	movf	??_init_i2c,w
   847  0681  00F0               	movwf	___lldiv@divisor
   848  0682  3001               	movlw	1
   849  0683  00F7               	movwf	___lldiv@dividend+3
   850  0684  3031               	movlw	49
   851  0685  00F6               	movwf	___lldiv@dividend+2
   852  0686  302D               	movlw	45
   853  0687  00F5               	movwf	___lldiv@dividend+1
   854  0688  3000               	movlw	0
   855  0689  00F4               	movwf	___lldiv@dividend
   856  068A  120A  118A  2796  120A  118A  	fcall	___lldiv
   857  068F  0870               	movf	?___lldiv,w
   858  0690  3EFF               	addlw	255
   859  0691  1683               	bsf	3,5	;RP0=1, select bank1
   860  0692  1303               	bcf	3,6	;RP1=0, select bank1
   861  0693  0093               	movwf	19	;volatile
   862  0694                     l1018:
   863                           
   864                           ;i2c.c: 13:     SSPEN = 1;
   865  0694  1283               	bcf	3,5	;RP0=0, select bank0
   866  0695  1303               	bcf	3,6	;RP1=0, select bank0
   867  0696  1694               	bsf	20,5	;volatile
   868  0697                     l56:
   869  0697  0008               	return
   870  0698                     __end_of_init_i2c:
   871                           
   872                           	psect	text3
   873  0796                     __ptext3:	
   874 ;; *************** function ___lldiv *****************
   875 ;; Defined at:
   876 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  divisor         4    0[COMMON] unsigned long 
   879 ;;  dividend        4    4[COMMON] unsigned long 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  quotient        4    9[COMMON] unsigned long 
   882 ;;  counter         1   13[COMMON] unsigned char 
   883 ;; Return value:  Size  Location     Type
   884 ;;                  4    0[COMMON] unsigned long 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         8       0       0       0       0
   893 ;;      Locals:         5       0       0       0       0
   894 ;;      Temps:          1       0       0       0       0
   895 ;;      Totals:        14       0       0       0       0
   896 ;;Total ram usage:       14 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_init_i2c
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           
   906                           ;psect for function ___lldiv
   907  0796                     ___lldiv:
   908  0796                     l982:	
   909                           ;incstack = 0
   910                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   911                           
   912  0796  3000               	movlw	0
   913  0797  00FC               	movwf	___lldiv@quotient+3
   914  0798  3000               	movlw	0
   915  0799  00FB               	movwf	___lldiv@quotient+2
   916  079A  3000               	movlw	0
   917  079B  00FA               	movwf	___lldiv@quotient+1
   918  079C  3000               	movlw	0
   919  079D  00F9               	movwf	___lldiv@quotient
   920  079E  0873               	movf	___lldiv@divisor+3,w
   921  079F  0472               	iorwf	___lldiv@divisor+2,w
   922  07A0  0471               	iorwf	___lldiv@divisor+1,w
   923  07A1  0470               	iorwf	___lldiv@divisor,w
   924  07A2  1903               	skipnz
   925  07A3  2FA5               	goto	u251
   926  07A4  2FA6               	goto	u250
   927  07A5                     u251:
   928  07A5  2FF3               	goto	l1002
   929  07A6                     u250:
   930  07A6                     l984:
   931  07A6  01FD               	clrf	___lldiv@counter
   932  07A7  0AFD               	incf	___lldiv@counter,f
   933  07A8  2FB6               	goto	l988
   934  07A9                     l986:
   935  07A9  3001               	movlw	1
   936  07AA  00F8               	movwf	??___lldiv
   937  07AB                     u265:
   938  07AB  1003               	clrc
   939  07AC  0DF0               	rlf	___lldiv@divisor,f
   940  07AD  0DF1               	rlf	___lldiv@divisor+1,f
   941  07AE  0DF2               	rlf	___lldiv@divisor+2,f
   942  07AF  0DF3               	rlf	___lldiv@divisor+3,f
   943  07B0  0BF8               	decfsz	??___lldiv,f
   944  07B1  2FAB               	goto	u265
   945  07B2  3001               	movlw	1
   946  07B3  00F8               	movwf	??___lldiv
   947  07B4  0878               	movf	??___lldiv,w
   948  07B5  07FD               	addwf	___lldiv@counter,f
   949  07B6                     l988:
   950  07B6  1FF3               	btfss	___lldiv@divisor+3,7
   951  07B7  2FB9               	goto	u271
   952  07B8  2FBA               	goto	u270
   953  07B9                     u271:
   954  07B9  2FA9               	goto	l986
   955  07BA                     u270:
   956  07BA                     l990:
   957  07BA  3001               	movlw	1
   958  07BB  00F8               	movwf	??___lldiv
   959  07BC                     u285:
   960  07BC  1003               	clrc
   961  07BD  0DF9               	rlf	___lldiv@quotient,f
   962  07BE  0DFA               	rlf	___lldiv@quotient+1,f
   963  07BF  0DFB               	rlf	___lldiv@quotient+2,f
   964  07C0  0DFC               	rlf	___lldiv@quotient+3,f
   965  07C1  0BF8               	decfsz	??___lldiv,f
   966  07C2  2FBC               	goto	u285
   967  07C3                     l992:
   968  07C3  0873               	movf	___lldiv@divisor+3,w
   969  07C4  0277               	subwf	___lldiv@dividend+3,w
   970  07C5  1D03               	skipz
   971  07C6  2FD1               	goto	u295
   972  07C7  0872               	movf	___lldiv@divisor+2,w
   973  07C8  0276               	subwf	___lldiv@dividend+2,w
   974  07C9  1D03               	skipz
   975  07CA  2FD1               	goto	u295
   976  07CB  0871               	movf	___lldiv@divisor+1,w
   977  07CC  0275               	subwf	___lldiv@dividend+1,w
   978  07CD  1D03               	skipz
   979  07CE  2FD1               	goto	u295
   980  07CF  0870               	movf	___lldiv@divisor,w
   981  07D0  0274               	subwf	___lldiv@dividend,w
   982  07D1                     u295:
   983  07D1  1C03               	skipc
   984  07D2  2FD4               	goto	u291
   985  07D3  2FD5               	goto	u290
   986  07D4                     u291:
   987  07D4  2FE4               	goto	l998
   988  07D5                     u290:
   989  07D5                     l994:
   990  07D5  0870               	movf	___lldiv@divisor,w
   991  07D6  02F4               	subwf	___lldiv@dividend,f
   992  07D7  0871               	movf	___lldiv@divisor+1,w
   993  07D8  1C03               	skipc
   994  07D9  0F71               	incfsz	___lldiv@divisor+1,w
   995  07DA  02F5               	subwf	___lldiv@dividend+1,f
   996  07DB  0872               	movf	___lldiv@divisor+2,w
   997  07DC  1C03               	skipc
   998  07DD  0F72               	incfsz	___lldiv@divisor+2,w
   999  07DE  02F6               	subwf	___lldiv@dividend+2,f
  1000  07DF  0873               	movf	___lldiv@divisor+3,w
  1001  07E0  1C03               	skipc
  1002  07E1  0F73               	incfsz	___lldiv@divisor+3,w
  1003  07E2  02F7               	subwf	___lldiv@dividend+3,f
  1004  07E3                     l996:
  1005  07E3  1479               	bsf	___lldiv@quotient,0
  1006  07E4                     l998:
  1007  07E4  3001               	movlw	1
  1008  07E5                     u305:
  1009  07E5  1003               	clrc
  1010  07E6  0CF3               	rrf	___lldiv@divisor+3,f
  1011  07E7  0CF2               	rrf	___lldiv@divisor+2,f
  1012  07E8  0CF1               	rrf	___lldiv@divisor+1,f
  1013  07E9  0CF0               	rrf	___lldiv@divisor,f
  1014  07EA  3EFF               	addlw	-1
  1015  07EB  1D03               	skipz
  1016  07EC  2FE5               	goto	u305
  1017  07ED                     l1000:
  1018  07ED  3001               	movlw	1
  1019  07EE  02FD               	subwf	___lldiv@counter,f
  1020  07EF  1D03               	btfss	3,2
  1021  07F0  2FF2               	goto	u311
  1022  07F1  2FF3               	goto	u310
  1023  07F2                     u311:
  1024  07F2  2FBA               	goto	l990
  1025  07F3                     u310:
  1026  07F3                     l1002:
  1027  07F3  087C               	movf	___lldiv@quotient+3,w
  1028  07F4  00F3               	movwf	?___lldiv+3
  1029  07F5  087B               	movf	___lldiv@quotient+2,w
  1030  07F6  00F2               	movwf	?___lldiv+2
  1031  07F7  087A               	movf	___lldiv@quotient+1,w
  1032  07F8  00F1               	movwf	?___lldiv+1
  1033  07F9  0879               	movf	___lldiv@quotient,w
  1034  07FA  00F0               	movwf	?___lldiv
  1035  07FB                     l256:
  1036  07FB  0008               	return
  1037  07FC                     __end_of___lldiv:
  1038                           
  1039                           	psect	text4
  1040  0560                     __ptext4:	
  1041 ;; *************** function _init_ds1307 *****************
  1042 ;; Defined at:
  1043 ;;		line 5 in file "ds1307.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  dummy           1    7[COMMON] unsigned char 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         0       0       0       0       0
  1058 ;;      Locals:         1       0       0       0       0
  1059 ;;      Temps:          1       0       0       0       0
  1060 ;;      Totals:         2       0       0       0       0
  1061 ;;Total ram usage:        2 bytes
  1062 ;; Hardware stack levels used: 1
  1063 ;; Hardware stack levels required when called: 4
  1064 ;; This function calls:
  1065 ;;		_read_ds1307
  1066 ;;		_write_ds1307
  1067 ;; This function is called by:
  1068 ;;		_init_config
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           
  1073                           ;psect for function _init_ds1307
  1074  0560                     _init_ds1307:
  1075  0560                     l1020:	
  1076                           ;incstack = 0
  1077                           ; Regs used in _init_ds1307: [wreg+status,2+status,0+pclath+cstack]
  1078                           
  1079                           
  1080                           ;ds1307.c: 7:     unsigned char dummy;;ds1307.c: 9:     dummy = read_ds1307(0x00);
  1081  0560  3000               	movlw	0
  1082  0561  120A  118A  260A  120A  118A  	fcall	_read_ds1307
  1083  0566  00F6               	movwf	??_init_ds1307
  1084  0567  0876               	movf	??_init_ds1307,w
  1085  0568  00F7               	movwf	init_ds1307@dummy
  1086  0569                     l1022:
  1087                           
  1088                           ;ds1307.c: 10:     dummy = dummy & 0x7F;
  1089  0569  0877               	movf	init_ds1307@dummy,w
  1090  056A  397F               	andlw	127
  1091  056B  00F6               	movwf	??_init_ds1307
  1092  056C  0876               	movf	??_init_ds1307,w
  1093  056D  00F7               	movwf	init_ds1307@dummy
  1094  056E                     l1024:
  1095                           
  1096                           ;ds1307.c: 11:     write_ds1307(0x00, dummy);
  1097  056E  0877               	movf	init_ds1307@dummy,w
  1098  056F  00F6               	movwf	??_init_ds1307
  1099  0570  0876               	movf	??_init_ds1307,w
  1100  0571  00F1               	movwf	write_ds1307@data
  1101  0572  3000               	movlw	0
  1102  0573  120A  118A  2579  120A  118A  	fcall	_write_ds1307
  1103  0578                     l96:
  1104  0578  0008               	return
  1105  0579                     __end_of_init_ds1307:
  1106                           
  1107                           	psect	text5
  1108  0579                     __ptext5:	
  1109 ;; *************** function _write_ds1307 *****************
  1110 ;; Defined at:
  1111 ;;		line 29 in file "ds1307.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  addr            1    wreg     unsigned char 
  1114 ;;  data            1    1[COMMON] unsigned char 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  addr            1    2[COMMON] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, pclath, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         1       0       0       0       0
  1127 ;;      Locals:         1       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0
  1129 ;;      Totals:         2       0       0       0       0
  1130 ;;Total ram usage:        2 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; Hardware stack levels required when called: 2
  1133 ;; This function calls:
  1134 ;;		_i2c_start
  1135 ;;		_i2c_stop
  1136 ;;		_i2c_write
  1137 ;; This function is called by:
  1138 ;;		_init_ds1307
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           
  1143                           ;psect for function _write_ds1307
  1144  0579                     _write_ds1307:
  1145                           
  1146                           ;incstack = 0
  1147                           ; Regs used in _write_ds1307: [wreg+status,2+status,0+pclath+cstack]
  1148                           ;write_ds1307@addr stored from wreg
  1149  0579  00F2               	movwf	write_ds1307@addr
  1150  057A                     l956:
  1151                           
  1152                           ;ds1307.c: 29: void write_ds1307(unsigned char addr, unsigned char data);ds1307.c: 30: {
      +                          ;ds1307.c: 31:     i2c_start();
  1153  057A  120A  118A  250B  120A  118A  	fcall	_i2c_start
  1154                           
  1155                           ;ds1307.c: 32:     i2c_write(0b11010000);
  1156  057F  30D0               	movlw	208
  1157  0580  120A  118A  2528  120A  118A  	fcall	_i2c_write
  1158                           
  1159                           ;ds1307.c: 33:     i2c_write(addr);
  1160  0585  0872               	movf	write_ds1307@addr,w
  1161  0586  120A  118A  2528  120A  118A  	fcall	_i2c_write
  1162                           
  1163                           ;ds1307.c: 34:     i2c_write(data);
  1164  058B  0871               	movf	write_ds1307@data,w
  1165  058C  120A  118A  2528  120A  118A  	fcall	_i2c_write
  1166                           
  1167                           ;ds1307.c: 35:     i2c_stop();
  1168  0591  120A  118A  2514  120A  118A  	fcall	_i2c_stop
  1169  0596                     l102:
  1170  0596  0008               	return
  1171  0597                     __end_of_write_ds1307:
  1172                           
  1173                           	psect	text6
  1174  0533                     __ptext6:	
  1175 ;; *************** function _init_clcd *****************
  1176 ;; Defined at:
  1177 ;;		line 44 in file "clcd.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;		None
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;		None
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0, pclath, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1191 ;;      Params:         0       0       0       0       0
  1192 ;;      Locals:         0       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0
  1194 ;;      Totals:         0       0       0       0       0
  1195 ;;Total ram usage:        0 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 2
  1198 ;; This function calls:
  1199 ;;		_init_display_controller
  1200 ;; This function is called by:
  1201 ;;		_init_config
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           
  1206                           ;psect for function _init_clcd
  1207  0533                     _init_clcd:
  1208  0533                     l1026:	
  1209                           ;incstack = 0
  1210                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1211                           
  1212                           
  1213                           ;clcd.c: 47:     TRISD = 0x00;
  1214  0533  1683               	bsf	3,5	;RP0=1, select bank1
  1215  0534  1303               	bcf	3,6	;RP1=0, select bank1
  1216  0535  0188               	clrf	8	;volatile
  1217  0536                     l1028:
  1218                           
  1219                           ;clcd.c: 50:     TRISE2 = 0;
  1220  0536  1109               	bcf	9,2	;volatile
  1221  0537                     l1030:
  1222                           
  1223                           ;clcd.c: 51:     TRISE1 = 0;
  1224  0537  1089               	bcf	9,1	;volatile
  1225  0538                     l1032:
  1226                           
  1227                           ;clcd.c: 53:     init_display_controller();
  1228  0538  120A  118A  26CE  120A  118A  	fcall	_init_display_controller
  1229  053D                     l125:
  1230  053D  0008               	return
  1231  053E                     __end_of_init_clcd:
  1232                           
  1233                           	psect	text7
  1234  06CE                     __ptext7:	
  1235 ;; *************** function _init_display_controller *****************
  1236 ;; Defined at:
  1237 ;;		line 21 in file "clcd.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2, status,0, pclath, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         0       0       0       0       0
  1252 ;;      Locals:         0       0       0       0       0
  1253 ;;      Temps:          2       0       0       0       0
  1254 ;;      Totals:         2       0       0       0       0
  1255 ;;Total ram usage:        2 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 1
  1258 ;; This function calls:
  1259 ;;		_clcd_write
  1260 ;; This function is called by:
  1261 ;;		_init_clcd
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _init_display_controller
  1267  06CE                     _init_display_controller:
  1268  06CE                     l958:	
  1269                           ;incstack = 0
  1270                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1271                           
  1272                           
  1273                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1274  06CE  30C3               	movlw	195
  1275  06CF  00F5               	movwf	??_init_display_controller+1
  1276  06D0  30CD               	movlw	205
  1277  06D1  00F4               	movwf	??_init_display_controller
  1278  06D2                     u377:
  1279  06D2  0BF4               	decfsz	??_init_display_controller,f
  1280  06D3  2ED2               	goto	u377
  1281  06D4  0BF5               	decfsz	??_init_display_controller+1,f
  1282  06D5  2ED2               	goto	u377
  1283  06D6                     l960:
  1284                           
  1285                           ;clcd.c: 27:     clcd_write(0x33, 0);
  1286  06D6  01F0               	clrf	clcd_write@mode
  1287  06D7  3033               	movlw	51
  1288  06D8  120A  118A  2698  120A  118A  	fcall	_clcd_write
  1289  06DD                     l962:
  1290                           
  1291                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1292  06DD  301B               	movlw	27
  1293  06DE  00F5               	movwf	??_init_display_controller+1
  1294  06DF  309E               	movlw	158
  1295  06E0  00F4               	movwf	??_init_display_controller
  1296  06E1                     u387:
  1297  06E1  0BF4               	decfsz	??_init_display_controller,f
  1298  06E2  2EE1               	goto	u387
  1299  06E3  0BF5               	decfsz	??_init_display_controller+1,f
  1300  06E4  2EE1               	goto	u387
  1301  06E5  0000               	nop
  1302                           
  1303                           ;clcd.c: 29:     clcd_write(0x33, 0);
  1304  06E6  01F0               	clrf	clcd_write@mode
  1305  06E7  3033               	movlw	51
  1306  06E8  120A  118A  2698  120A  118A  	fcall	_clcd_write
  1307  06ED                     l964:
  1308                           
  1309                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1310  06ED  30A6               	movlw	166
  1311  06EE  00F4               	movwf	??_init_display_controller
  1312  06EF                     u397:
  1313  06EF  0BF4               	decfsz	??_init_display_controller,f
  1314  06F0  2EEF               	goto	u397
  1315  06F1  0000               	nop
  1316  06F2                     l966:
  1317                           
  1318                           ;clcd.c: 31:     clcd_write(0x33, 0);
  1319  06F2  01F0               	clrf	clcd_write@mode
  1320  06F3  3033               	movlw	51
  1321  06F4  120A  118A  2698  120A  118A  	fcall	_clcd_write
  1322  06F9                     l968:
  1323                           
  1324                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1325  06F9  2EFA               	nop2	;2 cycle nop
  1326  06FA  2EFB               	nop2	;2 cycle nop
  1327  06FB  0000               	nop
  1328  06FC                     l970:
  1329                           
  1330                           ;clcd.c: 34:     clcd_write(0x02, 0);
  1331  06FC  01F0               	clrf	clcd_write@mode
  1332  06FD  3002               	movlw	2
  1333  06FE  120A  118A  2698  120A  118A  	fcall	_clcd_write
  1334  0703                     l972:
  1335                           
  1336                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1337  0703  30A6               	movlw	166
  1338  0704  00F4               	movwf	??_init_display_controller
  1339  0705                     u407:
  1340  0705  0BF4               	decfsz	??_init_display_controller,f
  1341  0706  2F05               	goto	u407
  1342  0707  0000               	nop
  1343                           
  1344                           ;clcd.c: 36:     clcd_write(0x28, 0);
  1345  0708  01F0               	clrf	clcd_write@mode
  1346  0709  3028               	movlw	40
  1347  070A  120A  118A  2698  120A  118A  	fcall	_clcd_write
  1348  070F                     l974:
  1349                           
  1350                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1351  070F  30A6               	movlw	166
  1352  0710  00F4               	movwf	??_init_display_controller
  1353  0711                     u417:
  1354  0711  0BF4               	decfsz	??_init_display_controller,f
  1355  0712  2F11               	goto	u417
  1356  0713  0000               	nop
  1357  0714                     l976:
  1358                           
  1359                           ;clcd.c: 38:     clcd_write(0x01, 0);
  1360  0714  01F0               	clrf	clcd_write@mode
  1361  0715  3001               	movlw	1
  1362  0716  120A  118A  2698  120A  118A  	fcall	_clcd_write
  1363                           
  1364                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1365  071B  3004               	movlw	4
  1366  071C  00F5               	movwf	??_init_display_controller+1
  1367  071D  303D               	movlw	61
  1368  071E  00F4               	movwf	??_init_display_controller
  1369  071F                     u427:
  1370  071F  0BF4               	decfsz	??_init_display_controller,f
  1371  0720  2F1F               	goto	u427
  1372  0721  0BF5               	decfsz	??_init_display_controller+1,f
  1373  0722  2F1F               	goto	u427
  1374  0723  2F24               	nop2
  1375  0724                     l978:
  1376                           
  1377                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  1378  0724  01F0               	clrf	clcd_write@mode
  1379  0725  300C               	movlw	12
  1380  0726  120A  118A  2698  120A  118A  	fcall	_clcd_write
  1381  072B                     l980:
  1382                           
  1383                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1384  072B  30A6               	movlw	166
  1385  072C  00F4               	movwf	??_init_display_controller
  1386  072D                     u437:
  1387  072D  0BF4               	decfsz	??_init_display_controller,f
  1388  072E  2F2D               	goto	u437
  1389  072F  0000               	nop
  1390  0730                     l122:
  1391  0730  0008               	return
  1392  0731                     __end_of_init_display_controller:
  1393                           
  1394                           	psect	text8
  1395  05BA                     __ptext8:	
  1396 ;; *************** function _get_time *****************
  1397 ;; Defined at:
  1398 ;;		line 39 in file "main.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  clock_reg       1    wreg     PTR unsigned char 
  1401 ;;		 -> main@clock_reg(3), 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  clock_reg       1    7[COMMON] PTR unsigned char 
  1404 ;;		 -> main@clock_reg(3), 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1414 ;;      Params:         0       0       0       0       0
  1415 ;;      Locals:         1       0       0       0       0
  1416 ;;      Temps:          1       0       0       0       0
  1417 ;;      Totals:         2       0       0       0       0
  1418 ;;Total ram usage:        2 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 4
  1421 ;; This function calls:
  1422 ;;		_read_ds1307
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _get_time
  1430  05BA                     _get_time:
  1431                           
  1432                           ;incstack = 0
  1433                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1434                           ;get_time@clock_reg stored from wreg
  1435  05BA  00F7               	movwf	get_time@clock_reg
  1436  05BB                     l1048:
  1437                           
  1438                           ;main.c: 39:     clcd_print("  DS1307  TEST  ", (0x80 + 0));;main.c: 40: };main.c: 41: 
  1439  05BB  3002               	movlw	2
  1440  05BC  120A  118A  260A  120A  118A  	fcall	_read_ds1307
  1441  05C1  00F6               	movwf	??_get_time
  1442  05C2  0877               	movf	get_time@clock_reg,w
  1443  05C3  0084               	movwf	4
  1444  05C4  0876               	movf	??_get_time,w
  1445  05C5  1383               	bcf	3,7	;select IRP bank0
  1446  05C6  0080               	movwf	0
  1447                           
  1448                           ;main.c: 42: void main(void) {
  1449  05C7  3001               	movlw	1
  1450  05C8  120A  118A  260A  120A  118A  	fcall	_read_ds1307
  1451  05CD  00F6               	movwf	??_get_time
  1452  05CE  0A77               	incf	get_time@clock_reg,w
  1453  05CF  0084               	movwf	4
  1454  05D0  0876               	movf	??_get_time,w
  1455  05D1  1383               	bcf	3,7	;select IRP bank0
  1456  05D2  0080               	movwf	0
  1457                           
  1458                           ;main.c: 43:     unsigned char clock_reg[3];
  1459  05D3  3000               	movlw	0
  1460  05D4  120A  118A  260A  120A  118A  	fcall	_read_ds1307
  1461  05D9  00F6               	movwf	??_get_time
  1462  05DA  0877               	movf	get_time@clock_reg,w
  1463  05DB  3E02               	addlw	2
  1464  05DC  0084               	movwf	4
  1465  05DD  0876               	movf	??_get_time,w
  1466  05DE  1383               	bcf	3,7	;select IRP bank0
  1467  05DF  0080               	movwf	0
  1468  05E0                     l16:
  1469  05E0  0008               	return
  1470  05E1                     __end_of_get_time:
  1471                           
  1472                           	psect	text9
  1473  060A                     __ptext9:	
  1474 ;; *************** function _read_ds1307 *****************
  1475 ;; Defined at:
  1476 ;;		line 14 in file "ds1307.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  addr            1    wreg     unsigned char 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  addr            1    4[COMMON] unsigned char 
  1481 ;;  data            1    5[COMMON] unsigned char 
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      unsigned char 
  1484 ;; Registers used:
  1485 ;;		wreg, status,2, status,0, pclath, cstack
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1491 ;;      Params:         0       0       0       0       0
  1492 ;;      Locals:         2       0       0       0       0
  1493 ;;      Temps:          1       0       0       0       0
  1494 ;;      Totals:         3       0       0       0       0
  1495 ;;Total ram usage:        3 bytes
  1496 ;; Hardware stack levels used: 1
  1497 ;; Hardware stack levels required when called: 3
  1498 ;; This function calls:
  1499 ;;		_i2c_read
  1500 ;;		_i2c_rep_start
  1501 ;;		_i2c_start
  1502 ;;		_i2c_stop
  1503 ;;		_i2c_write
  1504 ;; This function is called by:
  1505 ;;		_get_time
  1506 ;;		_init_ds1307
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _read_ds1307
  1512  060A                     _read_ds1307:
  1513                           
  1514                           ;incstack = 0
  1515                           ; Regs used in _read_ds1307: [wreg+status,2+status,0+pclath+cstack]
  1516                           ;read_ds1307@addr stored from wreg
  1517  060A  00F4               	movwf	read_ds1307@addr
  1518  060B                     l950:
  1519                           
  1520                           ;ds1307.c: 14: unsigned char read_ds1307(unsigned char addr);ds1307.c: 15: {;ds1307.c: 1
      +                          6:     unsigned char data;;ds1307.c: 18:     i2c_start();
  1521  060B  120A  118A  250B  120A  118A  	fcall	_i2c_start
  1522                           
  1523                           ;ds1307.c: 19:     i2c_write(0b11010000);
  1524  0610  30D0               	movlw	208
  1525  0611  120A  118A  2528  120A  118A  	fcall	_i2c_write
  1526                           
  1527                           ;ds1307.c: 20:     i2c_write(addr);
  1528  0616  0874               	movf	read_ds1307@addr,w
  1529  0617  120A  118A  2528  120A  118A  	fcall	_i2c_write
  1530                           
  1531                           ;ds1307.c: 21:     i2c_rep_start();
  1532  061C  120A  118A  251D  120A  118A  	fcall	_i2c_rep_start
  1533                           
  1534                           ;ds1307.c: 22:     i2c_write(0b11010001);
  1535  0621  30D1               	movlw	209
  1536  0622  120A  118A  2528  120A  118A  	fcall	_i2c_write
  1537                           
  1538                           ;ds1307.c: 23:     data = i2c_read(0);
  1539  0627  3000               	movlw	0
  1540  0628  120A  118A  2597  120A  118A  	fcall	_i2c_read
  1541  062D  00F3               	movwf	??_read_ds1307
  1542  062E  0873               	movf	??_read_ds1307,w
  1543  062F  00F5               	movwf	read_ds1307@data
  1544                           
  1545                           ;ds1307.c: 24:     i2c_stop();
  1546  0630  120A  118A  2514  120A  118A  	fcall	_i2c_stop
  1547  0635                     l952:
  1548                           
  1549                           ;ds1307.c: 26:     return data;
  1550  0635  0875               	movf	read_ds1307@data,w
  1551  0636                     l99:
  1552  0636  0008               	return
  1553  0637                     __end_of_read_ds1307:
  1554                           
  1555                           	psect	text10
  1556  0528                     __ptext10:	
  1557 ;; *************** function _i2c_write *****************
  1558 ;; Defined at:
  1559 ;;		line 71 in file "i2c.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  data            1    wreg     unsigned char 
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;  data            1    0[COMMON] unsigned char 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  2   78[None  ] int 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0, pclath, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1573 ;;      Params:         0       0       0       0       0
  1574 ;;      Locals:         1       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0
  1576 ;;      Totals:         1       0       0       0       0
  1577 ;;Total ram usage:        1 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; Hardware stack levels required when called: 1
  1580 ;; This function calls:
  1581 ;;		_i2c_wait_for_idle
  1582 ;; This function is called by:
  1583 ;;		_read_ds1307
  1584 ;;		_write_ds1307
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           
  1589                           ;psect for function _i2c_write
  1590  0528                     _i2c_write:
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  1594                           ;i2c_write@data stored from wreg
  1595  0528  00F0               	movwf	i2c_write@data
  1596  0529                     l922:
  1597                           
  1598                           ;i2c.c: 71: int i2c_write(unsigned char data);i2c.c: 72: {;i2c.c: 73:     i2c_wait_for_i
      +                          dle();
  1599  0529  120A  118A  253E  120A  118A  	fcall	_i2c_wait_for_idle
  1600  052E                     l924:
  1601                           
  1602                           ;i2c.c: 74:     SSPBUF = data;
  1603  052E  0870               	movf	i2c_write@data,w
  1604  052F  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0530  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0531  0093               	movwf	19	;volatile
  1607  0532                     l926:
  1608  0532                     l79:	
  1609                           ;i2c.c: 76:     return !ACKSTAT;;	Return value of _i2c_write is never used
  1610                           
  1611  0532  0008               	return
  1612  0533                     __end_of_i2c_write:
  1613                           
  1614                           	psect	text11
  1615  051D                     __ptext11:	
  1616 ;; *************** function _i2c_rep_start *****************
  1617 ;; Defined at:
  1618 ;;		line 33 in file "i2c.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0, pclath, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1632 ;;      Params:         0       0       0       0       0
  1633 ;;      Locals:         0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0
  1635 ;;      Totals:         0       0       0       0       0
  1636 ;;Total ram usage:        0 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; Hardware stack levels required when called: 2
  1639 ;; This function calls:
  1640 ;;		_i2c_start
  1641 ;;		_i2c_stop
  1642 ;; This function is called by:
  1643 ;;		_read_ds1307
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           
  1648                           ;psect for function _i2c_rep_start
  1649  051D                     _i2c_rep_start:
  1650  051D                     l906:	
  1651                           ;incstack = 0
  1652                           ; Regs used in _i2c_rep_start: [wreg+status,2+status,0+pclath+cstack]
  1653                           
  1654                           
  1655                           ;i2c.c: 35:     i2c_stop();
  1656  051D  120A  118A  2514  120A  118A  	fcall	_i2c_stop
  1657                           
  1658                           ;i2c.c: 36:     i2c_start();
  1659  0522  120A  118A  250B  120A  118A  	fcall	_i2c_start
  1660  0527                     l68:
  1661  0527  0008               	return
  1662  0528                     __end_of_i2c_rep_start:
  1663                           
  1664                           	psect	text12
  1665  0514                     __ptext12:	
  1666 ;; *************** function _i2c_stop *****************
  1667 ;; Defined at:
  1668 ;;		line 41 in file "i2c.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0, pclath, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1682 ;;      Params:         0       0       0       0       0
  1683 ;;      Locals:         0       0       0       0       0
  1684 ;;      Temps:          0       0       0       0       0
  1685 ;;      Totals:         0       0       0       0       0
  1686 ;;Total ram usage:        0 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; Hardware stack levels required when called: 1
  1689 ;; This function calls:
  1690 ;;		_i2c_wait_for_idle
  1691 ;; This function is called by:
  1692 ;;		_i2c_rep_start
  1693 ;;		_read_ds1307
  1694 ;;		_write_ds1307
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           
  1699                           ;psect for function _i2c_stop
  1700  0514                     _i2c_stop:
  1701  0514                     l902:	
  1702                           ;incstack = 0
  1703                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  1704                           
  1705                           
  1706                           ;i2c.c: 43:     i2c_wait_for_idle();
  1707  0514  120A  118A  253E  120A  118A  	fcall	_i2c_wait_for_idle
  1708  0519                     l904:
  1709                           
  1710                           ;i2c.c: 44:     PEN = 1;
  1711  0519  1683               	bsf	3,5	;RP0=1, select bank1
  1712  051A  1303               	bcf	3,6	;RP1=0, select bank1
  1713  051B  1511               	bsf	17,2	;volatile
  1714  051C                     l71:
  1715  051C  0008               	return
  1716  051D                     __end_of_i2c_stop:
  1717                           
  1718                           	psect	text13
  1719  050B                     __ptext13:	
  1720 ;; *************** function _i2c_start *****************
  1721 ;; Defined at:
  1722 ;;		line 22 in file "i2c.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1736 ;;      Params:         0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0
  1739 ;;      Totals:         0       0       0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used: 1
  1742 ;; Hardware stack levels required when called: 1
  1743 ;; This function calls:
  1744 ;;		_i2c_wait_for_idle
  1745 ;; This function is called by:
  1746 ;;		_i2c_rep_start
  1747 ;;		_read_ds1307
  1748 ;;		_write_ds1307
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           
  1753                           ;psect for function _i2c_start
  1754  050B                     _i2c_start:
  1755  050B                     l898:	
  1756                           ;incstack = 0
  1757                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  1758                           
  1759                           
  1760                           ;i2c.c: 24:     i2c_wait_for_idle();
  1761  050B  120A  118A  253E  120A  118A  	fcall	_i2c_wait_for_idle
  1762  0510                     l900:
  1763                           
  1764                           ;i2c.c: 25:     SEN = 1;
  1765  0510  1683               	bsf	3,5	;RP0=1, select bank1
  1766  0511  1303               	bcf	3,6	;RP1=0, select bank1
  1767  0512  1411               	bsf	17,0	;volatile
  1768  0513                     l65:
  1769  0513  0008               	return
  1770  0514                     __end_of_i2c_start:
  1771                           
  1772                           	psect	text14
  1773  0597                     __ptext14:	
  1774 ;; *************** function _i2c_read *****************
  1775 ;; Defined at:
  1776 ;;		line 47 in file "i2c.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  ack             1    wreg     unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  ack             1    1[COMMON] unsigned char 
  1781 ;;  data            1    2[COMMON] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      unsigned char 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0, pclath, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       0       0       0       0
  1792 ;;      Locals:         2       0       0       0       0
  1793 ;;      Temps:          1       0       0       0       0
  1794 ;;      Totals:         3       0       0       0       0
  1795 ;;Total ram usage:        3 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 1
  1798 ;; This function calls:
  1799 ;;		_i2c_wait_for_idle
  1800 ;; This function is called by:
  1801 ;;		_read_ds1307
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           
  1806                           ;psect for function _i2c_read
  1807  0597                     _i2c_read:
  1808                           
  1809                           ;incstack = 0
  1810                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  1811                           ;i2c_read@ack stored from wreg
  1812  0597  00F1               	movwf	i2c_read@ack
  1813  0598                     l908:
  1814                           
  1815                           ;i2c.c: 47: unsigned char i2c_read(unsigned char ack);i2c.c: 48: {;i2c.c: 49:     unsign
      +                          ed char data;;i2c.c: 51:     i2c_wait_for_idle();
  1816  0598  120A  118A  253E  120A  118A  	fcall	_i2c_wait_for_idle
  1817  059D                     l910:
  1818                           
  1819                           ;i2c.c: 52:     RCEN = 1;
  1820  059D  1683               	bsf	3,5	;RP0=1, select bank1
  1821  059E  1303               	bcf	3,6	;RP1=0, select bank1
  1822  059F  1591               	bsf	17,3	;volatile
  1823                           
  1824                           ;i2c.c: 54:     i2c_wait_for_idle();
  1825  05A0  120A  118A  253E  120A  118A  	fcall	_i2c_wait_for_idle
  1826  05A5                     l912:
  1827                           
  1828                           ;i2c.c: 55:     data = SSPBUF;
  1829  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1830  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1831  05A7  0813               	movf	19,w	;volatile
  1832  05A8  00F0               	movwf	??_i2c_read
  1833  05A9  0870               	movf	??_i2c_read,w
  1834  05AA  00F2               	movwf	i2c_read@data
  1835  05AB                     l914:
  1836                           
  1837                           ;i2c.c: 57:     if (ack == 1)
  1838  05AB  0371               	decf	i2c_read@ack,w
  1839  05AC  1D03               	btfss	3,2
  1840  05AD  2DAF               	goto	u211
  1841  05AE  2DB0               	goto	u210
  1842  05AF                     u211:
  1843  05AF  2DB4               	goto	l74
  1844  05B0                     u210:
  1845  05B0                     l916:
  1846                           
  1847                           ;i2c.c: 58:     {;i2c.c: 59:         ACKDT = 1;
  1848  05B0  1683               	bsf	3,5	;RP0=1, select bank1
  1849  05B1  1303               	bcf	3,6	;RP1=0, select bank1
  1850  05B2  1691               	bsf	17,5	;volatile
  1851                           
  1852                           ;i2c.c: 60:     }
  1853  05B3  2DB7               	goto	l75
  1854  05B4                     l74:	
  1855                           ;i2c.c: 61:     else
  1856                           
  1857                           
  1858                           ;i2c.c: 62:     {;i2c.c: 63:         ACKDT = 0;
  1859  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  1860  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  1861  05B6  1291               	bcf	17,5	;volatile
  1862  05B7                     l75:	
  1863                           ;i2c.c: 64:     }
  1864                           
  1865                           
  1866                           ;i2c.c: 66:     ACKEN = 1;
  1867  05B7  1611               	bsf	17,4	;volatile
  1868  05B8                     l918:
  1869                           
  1870                           ;i2c.c: 68:     return data;
  1871  05B8  0872               	movf	i2c_read@data,w
  1872  05B9                     l76:
  1873  05B9  0008               	return
  1874  05BA                     __end_of_i2c_read:
  1875                           
  1876                           	psect	text15
  1877  053E                     __ptext15:	
  1878 ;; *************** function _i2c_wait_for_idle *****************
  1879 ;; Defined at:
  1880 ;;		line 16 in file "i2c.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0
  1897 ;;      Totals:         0       0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_i2c_start
  1904 ;;		_i2c_stop
  1905 ;;		_i2c_read
  1906 ;;		_i2c_write
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           
  1911                           ;psect for function _i2c_wait_for_idle
  1912  053E                     _i2c_wait_for_idle:
  1913  053E                     l894:	
  1914                           ;incstack = 0
  1915                           ; Regs used in _i2c_wait_for_idle: [wreg+status,2]
  1916                           
  1917  053E                     l59:	
  1918                           ;i2c.c: 19:     while (R_nW || (SSPCON2 & 0x1F));
  1919                           
  1920  053E  1683               	bsf	3,5	;RP0=1, select bank1
  1921  053F  1303               	bcf	3,6	;RP1=0, select bank1
  1922  0540  1914               	btfsc	20,2	;volatile
  1923  0541  2D43               	goto	u191
  1924  0542  2D44               	goto	u190
  1925  0543                     u191:
  1926  0543  2D3E               	goto	l59
  1927  0544                     u190:
  1928  0544                     l896:
  1929  0544  0811               	movf	17,w	;volatile
  1930  0545  391F               	andlw	31
  1931  0546  1D03               	btfss	3,2
  1932  0547  2D49               	goto	u201
  1933  0548  2D4A               	goto	u200
  1934  0549                     u201:
  1935  0549  2D3E               	goto	l59
  1936  054A                     u200:
  1937  054A                     l62:
  1938  054A  0008               	return
  1939  054B                     __end_of_i2c_wait_for_idle:
  1940                           
  1941                           	psect	text16
  1942  0731                     __ptext16:	
  1943 ;; *************** function _display_time *****************
  1944 ;; Defined at:
  1945 ;;		line 12 in file "main.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  clock_reg       1    wreg     PTR unsigned char 
  1948 ;;		 -> main@clock_reg(3), 
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;  clock_reg       1    9[BANK0 ] PTR unsigned char 
  1951 ;;		 -> main@clock_reg(3), 
  1952 ;;  time            9    0[BANK0 ] unsigned char [9]
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1962 ;;      Params:         0       0       0       0       0
  1963 ;;      Locals:         0      10       0       0       0
  1964 ;;      Temps:          2       0       0       0       0
  1965 ;;      Totals:         2      10       0       0       0
  1966 ;;Total ram usage:       12 bytes
  1967 ;; Hardware stack levels used: 1
  1968 ;; Hardware stack levels required when called: 2
  1969 ;; This function calls:
  1970 ;;		_clcd_print
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           
  1977                           ;psect for function _display_time
  1978  0731                     _display_time:
  1979                           
  1980                           ;incstack = 0
  1981                           ; Regs used in _display_time: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1982                           ;display_time@clock_reg stored from wreg
  1983  0731  1283               	bcf	3,5	;RP0=0, select bank0
  1984  0732  1303               	bcf	3,6	;RP1=0, select bank0
  1985  0733  00A9               	movwf	display_time@clock_reg
  1986  0734                     l1034:
  1987                           
  1988                           ;main.c: 12: ;main.c: 13:     time[2] = ':';;main.c: 20:     time[6] = ((clock_reg[2] >>
      +                           4) & 0x07) + '0';;main.c: 22:     time[8] = '\0';
  1989  0734  0829               	movf	display_time@clock_reg,w
  1990  0735  0084               	movwf	4
  1991  0736  1383               	bcf	3,7	;select IRP bank0
  1992  0737  0800               	movf	0,w
  1993  0738  00F7               	movwf	??_display_time
  1994  0739  3004               	movlw	4
  1995  073A                     u345:
  1996  073A  1003               	clrc
  1997  073B  0CF7               	rrf	??_display_time,f
  1998  073C  3EFF               	addlw	-1
  1999  073D  1D03               	skipz
  2000  073E  2F3A               	goto	u345
  2001  073F  0877               	movf	??_display_time,w
  2002  0740  3903               	andlw	3
  2003  0741  3E30               	addlw	48
  2004  0742  00F8               	movwf	??_display_time+1
  2005  0743  0878               	movf	??_display_time+1,w
  2006  0744  00A0               	movwf	display_time@time
  2007                           
  2008                           ;main.c: 23: 
  2009  0745  0829               	movf	display_time@clock_reg,w
  2010  0746  0084               	movwf	4
  2011  0747  0800               	movf	0,w
  2012  0748  390F               	andlw	15
  2013  0749  3E30               	addlw	48
  2014  074A  00F7               	movwf	??_display_time
  2015  074B  0877               	movf	??_display_time,w
  2016  074C  00A1               	movwf	display_time@time+1
  2017  074D                     l1036:
  2018                           
  2019                           ;main.c: 25: }
  2020  074D  303A               	movlw	58
  2021  074E  00F7               	movwf	??_display_time
  2022  074F  0877               	movf	??_display_time,w
  2023  0750  00A2               	movwf	display_time@time+2
  2024  0751                     l1038:
  2025                           
  2026                           ;main.c: 27: static void get_time(unsigned char *clock_reg)
  2027  0751  0A29               	incf	display_time@clock_reg,w
  2028  0752  0084               	movwf	4
  2029  0753  0800               	movf	0,w
  2030  0754  00F7               	movwf	??_display_time
  2031  0755  3004               	movlw	4
  2032  0756                     u355:
  2033  0756  1003               	clrc
  2034  0757  0CF7               	rrf	??_display_time,f
  2035  0758  3EFF               	addlw	-1
  2036  0759  1D03               	skipz
  2037  075A  2F56               	goto	u355
  2038  075B  0877               	movf	??_display_time,w
  2039  075C  3907               	andlw	7
  2040  075D  3E30               	addlw	48
  2041  075E  00F8               	movwf	??_display_time+1
  2042  075F  0878               	movf	??_display_time+1,w
  2043  0760  00A3               	movwf	display_time@time+3
  2044  0761                     l1040:
  2045                           
  2046                           ;main.c: 28: {
  2047  0761  0A29               	incf	display_time@clock_reg,w
  2048  0762  0084               	movwf	4
  2049  0763  0800               	movf	0,w
  2050  0764  390F               	andlw	15
  2051  0765  3E30               	addlw	48
  2052  0766  00F7               	movwf	??_display_time
  2053  0767  0877               	movf	??_display_time,w
  2054  0768  00A4               	movwf	display_time@time+4
  2055  0769                     l1042:
  2056                           
  2057                           ;main.c: 30:     clock_reg[1] = read_ds1307(0x01);
  2058  0769  303A               	movlw	58
  2059  076A  00F7               	movwf	??_display_time
  2060  076B  0877               	movf	??_display_time,w
  2061  076C  00A5               	movwf	display_time@time+5
  2062                           
  2063                           ;main.c: 32: }
  2064  076D  0829               	movf	display_time@clock_reg,w
  2065  076E  3E02               	addlw	2
  2066  076F  0084               	movwf	4
  2067  0770  0800               	movf	0,w
  2068  0771  00F7               	movwf	??_display_time
  2069  0772  3004               	movlw	4
  2070  0773                     u365:
  2071  0773  1003               	clrc
  2072  0774  0CF7               	rrf	??_display_time,f
  2073  0775  3EFF               	addlw	-1
  2074  0776  1D03               	skipz
  2075  0777  2F73               	goto	u365
  2076  0778  0877               	movf	??_display_time,w
  2077  0779  3907               	andlw	7
  2078  077A  3E30               	addlw	48
  2079  077B  00F8               	movwf	??_display_time+1
  2080  077C  0878               	movf	??_display_time+1,w
  2081  077D  00A6               	movwf	display_time@time+6
  2082                           
  2083                           ;main.c: 33: 
  2084  077E  0829               	movf	display_time@clock_reg,w
  2085  077F  3E02               	addlw	2
  2086  0780  0084               	movwf	4
  2087  0781  0800               	movf	0,w
  2088  0782  390F               	andlw	15
  2089  0783  3E30               	addlw	48
  2090  0784  00F7               	movwf	??_display_time
  2091  0785  0877               	movf	??_display_time,w
  2092  0786  00A7               	movwf	display_time@time+7
  2093  0787                     l1044:
  2094                           
  2095                           ;main.c: 34: static void init_config(void) {
  2096  0787  01A8               	clrf	display_time@time+8
  2097  0788                     l1046:
  2098                           
  2099                           ;main.c: 36:     init_ds1307();
  2100  0788  3020               	movlw	(low (display_time@time| 0))& (0+255)
  2101  0789  00F4               	movwf	clcd_print@str
  2102  078A  3000               	movlw	0
  2103  078B  00F5               	movwf	clcd_print@str+1
  2104  078C  30C4               	movlw	196
  2105  078D  00F7               	movwf	??_display_time
  2106  078E  0877               	movf	??_display_time,w
  2107  078F  00F6               	movwf	clcd_print@addr
  2108  0790  120A  118A  2637  120A  118A  	fcall	_clcd_print
  2109  0795                     l13:
  2110  0795  0008               	return
  2111  0796                     __end_of_display_time:
  2112                           
  2113                           	psect	text17
  2114  0637                     __ptext17:	
  2115 ;; *************** function _clcd_print *****************
  2116 ;; Defined at:
  2117 ;;		line 62 in file "clcd.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  str             2    4[COMMON] PTR const unsigned char 
  2120 ;;		 -> STR_1(17), display_time@time(9), 
  2121 ;;  addr            1    6[COMMON] unsigned char 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         3       0       0       0       0
  2134 ;;      Locals:         0       0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0
  2136 ;;      Totals:         3       0       0       0       0
  2137 ;;Total ram usage:        3 bytes
  2138 ;; Hardware stack levels used: 1
  2139 ;; Hardware stack levels required when called: 1
  2140 ;; This function calls:
  2141 ;;		_clcd_write
  2142 ;; This function is called by:
  2143 ;;		_display_time
  2144 ;;		_init_config
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           
  2149                           ;psect for function _clcd_print
  2150  0637                     _clcd_print:
  2151  0637                     l1006:	
  2152                           ;incstack = 0
  2153                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2154                           
  2155                           
  2156                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  2157  0637  01F0               	clrf	clcd_write@mode
  2158  0638  0876               	movf	clcd_print@addr,w
  2159  0639  120A  118A  2698  120A  118A  	fcall	_clcd_write
  2160                           
  2161                           ;clcd.c: 66:     while (*str != '\0')
  2162  063E  2E55               	goto	l1012
  2163  063F                     l1008:
  2164                           
  2165                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  2166  063F  01F0               	clrf	clcd_write@mode
  2167  0640  0AF0               	incf	clcd_write@mode,f
  2168  0641  0875               	movf	clcd_print@str+1,w
  2169  0642  00FF               	movwf	btemp+1
  2170  0643  0874               	movf	clcd_print@str,w
  2171  0644  0084               	movwf	4
  2172  0645  120A  118A  2003  120A  118A  	fcall	stringtab
  2173  064A  120A  118A  2698  120A  118A  	fcall	_clcd_write
  2174  064F                     l1010:
  2175                           
  2176                           ;clcd.c: 69:         str++;
  2177  064F  3001               	movlw	1
  2178  0650  07F4               	addwf	clcd_print@str,f
  2179  0651  1803               	skipnc
  2180  0652  0AF5               	incf	clcd_print@str+1,f
  2181  0653  3000               	movlw	0
  2182  0654  07F5               	addwf	clcd_print@str+1,f
  2183  0655                     l1012:
  2184                           
  2185                           ;clcd.c: 66:     while (*str != '\0')
  2186  0655  0875               	movf	clcd_print@str+1,w
  2187  0656  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0657  1303               	bcf	3,6	;RP1=0, select bank0
  2189  0658  00FF               	movwf	btemp+1
  2190  0659  0874               	movf	clcd_print@str,w
  2191  065A  0084               	movwf	4
  2192  065B  120A  118A  2003  120A  118A  	fcall	stringtab
  2193  0660  3A00               	xorlw	0
  2194  0661  1D03               	skipz
  2195  0662  2E64               	goto	u321
  2196  0663  2E65               	goto	u320
  2197  0664                     u321:
  2198  0664  2E3F               	goto	l1008
  2199  0665                     u320:
  2200  0665                     l134:
  2201  0665  0008               	return
  2202  0666                     __end_of_clcd_print:
  2203                           
  2204                           	psect	text18
  2205  0698                     __ptext18:	
  2206 ;; *************** function _clcd_write *****************
  2207 ;; Defined at:
  2208 ;;		line 4 in file "clcd.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  byte            1    wreg     unsigned char 
  2211 ;;  mode            1    0[COMMON] unsigned char 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  byte            1    3[COMMON] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         1       0       0       0       0
  2224 ;;      Locals:         1       0       0       0       0
  2225 ;;      Temps:          2       0       0       0       0
  2226 ;;      Totals:         4       0       0       0       0
  2227 ;;Total ram usage:        4 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_init_display_controller
  2233 ;;		_clcd_print
  2234 ;;		_clcd_putch
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           
  2239                           ;psect for function _clcd_write
  2240  0698                     _clcd_write:
  2241                           
  2242                           ;incstack = 0
  2243                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  2244                           ;clcd_write@byte stored from wreg
  2245  0698  00F3               	movwf	clcd_write@byte
  2246  0699                     l930:
  2247                           
  2248                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 =(__bit) mode;
  2249  0699  1870               	btfsc	clcd_write@mode,0
  2250  069A  2E9C               	goto	u221
  2251  069B  2EA0               	goto	u220
  2252  069C                     u221:
  2253  069C  1283               	bcf	3,5	;RP0=0, select bank0
  2254  069D  1303               	bcf	3,6	;RP1=0, select bank0
  2255  069E  1509               	bsf	9,2	;volatile
  2256  069F  2EA3               	goto	u234
  2257  06A0                     u220:
  2258  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  2259  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  2260  06A2  1109               	bcf	9,2	;volatile
  2261  06A3                     u234:
  2262  06A3                     l932:
  2263                           
  2264                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  2265  06A3  0873               	movf	clcd_write@byte,w
  2266  06A4  39F0               	andlw	240
  2267  06A5  0088               	movwf	8	;volatile
  2268  06A6                     l934:
  2269                           
  2270                           ;clcd.c: 9:     RE1 = 1;
  2271  06A6  1489               	bsf	9,1	;volatile
  2272  06A7                     l936:
  2273                           
  2274                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2275  06A7  30A6               	movlw	166
  2276  06A8  00F1               	movwf	??_clcd_write
  2277  06A9                     u447:
  2278  06A9  0BF1               	decfsz	??_clcd_write,f
  2279  06AA  2EA9               	goto	u447
  2280  06AB  0000               	nop
  2281  06AC                     l938:
  2282                           
  2283                           ;clcd.c: 11:     RE1 = 0;
  2284  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  2285  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  2286  06AE  1089               	bcf	9,1	;volatile
  2287  06AF                     l940:
  2288                           
  2289                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << (unsigned char) 4;
  2290  06AF  0873               	movf	clcd_write@byte,w
  2291  06B0  390F               	andlw	15
  2292  06B1  00F1               	movwf	??_clcd_write
  2293  06B2  3003               	movlw	3
  2294  06B3                     u245:
  2295  06B3  1003               	clrc
  2296  06B4  0DF1               	rlf	??_clcd_write,f
  2297  06B5  3EFF               	addlw	-1
  2298  06B6  1D03               	skipz
  2299  06B7  2EB3               	goto	u245
  2300  06B8  1003               	clrc
  2301  06B9  0D71               	rlf	??_clcd_write,w
  2302  06BA  0088               	movwf	8	;volatile
  2303  06BB                     l942:
  2304                           
  2305                           ;clcd.c: 14:     RE1 = 1;
  2306  06BB  1489               	bsf	9,1	;volatile
  2307  06BC                     l944:
  2308                           
  2309                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  2310  06BC  30A6               	movlw	166
  2311  06BD  00F1               	movwf	??_clcd_write
  2312  06BE                     u457:
  2313  06BE  0BF1               	decfsz	??_clcd_write,f
  2314  06BF  2EBE               	goto	u457
  2315  06C0  0000               	nop
  2316  06C1                     l946:
  2317                           
  2318                           ;clcd.c: 16:     RE1 = 0;
  2319  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2320  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  2321  06C3  1089               	bcf	9,1	;volatile
  2322  06C4                     l948:
  2323                           
  2324                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  2325  06C4  301B               	movlw	27
  2326  06C5  00F2               	movwf	??_clcd_write+1
  2327  06C6  309E               	movlw	158
  2328  06C7  00F1               	movwf	??_clcd_write
  2329  06C8                     u467:
  2330  06C8  0BF1               	decfsz	??_clcd_write,f
  2331  06C9  2EC8               	goto	u467
  2332  06CA  0BF2               	decfsz	??_clcd_write+1,f
  2333  06CB  2EC8               	goto	u467
  2334  06CC  0000               	nop
  2335  06CD                     l119:
  2336  06CD  0008               	return
  2337  06CE                     __end_of_clcd_write:
  2338  007E                     btemp	set	126	;btemp
  2339  007E                     wtemp0	set	126
  2340                           
  2341                           	psect	config
  2342                           
  2343                           ;Config register CONFIG @ 0x2007
  2344                           ;	Oscillator Selection bits
  2345                           ;	FOSC = 0x3, unprogrammed default
  2346                           ;	Watchdog Timer Enable bit
  2347                           ;	WDTE = OFF, WDT disabled
  2348                           ;	Power-up Timer Enable bit
  2349                           ;	PWRTE = 0x1, unprogrammed default
  2350                           ;	Brown-out Reset Enable bit
  2351                           ;	BOREN = 0x1, unprogrammed default
  2352                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2353                           ;	LVP = 0x1, unprogrammed default
  2354                           ;	Data EEPROM Memory Code Protection bit
  2355                           ;	CPD = 0x1, unprogrammed default
  2356                           ;	Flash Program Memory Write Enable bits
  2357                           ;	WRT = 0x3, unprogrammed default
  2358                           ;	In-Circuit Debugger Mode bit
  2359                           ;	DEBUG = 0x1, unprogrammed default
  2360                           ;	Flash Program Memory Code Protection bit
  2361                           ;	CP = 0x1, unprogrammed default
  2362  2007                     	org	8199
  2363  2007  3FFB               	dw	16379

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_1(CODE[17]), display_time@time(BANK0[9]), 

    get_time@clock_reg	PTR unsigned char  size(1) Largest target is 3
		 -> main@clock_reg(BANK0[3]), 

    display_time@clock_reg	PTR unsigned char  size(1) Largest target is 3
		 -> main@clock_reg(BANK0[3]), 


Critical Paths under _main in COMMON

    _init_i2c->___lldiv
    _init_ds1307->_read_ds1307
    _write_ds1307->_i2c_write
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _get_time->_read_ds1307
    _read_ds1307->_i2c_read
    _display_time->_clcd_print
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    _main->_display_time
    _init_config->_init_i2c

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4809
                                             10 BANK0      3     3      0
                       _display_time
                           _get_time
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          1     1      0    2887
                                              8 BANK0      1     1      0
                         _clcd_print
                          _init_clcd
                        _init_ds1307
                           _init_i2c
 ---------------------------------------------------------------------------------
 (2) _init_i2c                                             8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) _init_ds1307                                          2     2      0     300
                                              6 COMMON     2     2      0
                        _read_ds1307
                       _write_ds1307
 ---------------------------------------------------------------------------------
 (3) _write_ds1307                                         2     1      1     142
                                              1 COMMON     2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _get_time                                             2     2      0     211
                                              6 COMMON     2     2      0
                        _read_ds1307
 ---------------------------------------------------------------------------------
 (3) _read_ds1307                                          3     3      0     112
                                              3 COMMON     3     3      0
                           _i2c_read
                      _i2c_rep_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (4) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_rep_start                                        0     0      0       0
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_start                                            0     0      0       0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (4) _i2c_read                                             3     3      0      45
                                              0 COMMON     3     3      0
                  _i2c_wait_for_idle
 ---------------------------------------------------------------------------------
 (5) _i2c_wait_for_idle                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_time                                        12    12      0    1655
                                              7 COMMON     2     2      0
                                              0 BANK0     10    10      0
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    1273
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display_time
     _clcd_print
       _clcd_write
   _get_time
     _read_ds1307
       _i2c_read
         _i2c_wait_for_idle
       _i2c_rep_start
         _i2c_start
           _i2c_wait_for_idle
         _i2c_stop
           _i2c_wait_for_idle
       _i2c_start
       _i2c_stop
       _i2c_write
         _i2c_wait_for_idle
   _init_config
     _clcd_print
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_ds1307
       _read_ds1307
       _write_ds1307
         _i2c_start
         _i2c_stop
         _i2c_write
     _init_i2c
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Feb 11 10:13:51 2022

                               pc 0002                    clcd_print@addr 0076  __size_of_init_display_controller 0063  
                              l13 0795                                l16 05E0                                l19 0609  
                              l62 054A                                l71 051C                                l56 0697  
                              l65 0513                                l74 05B4                                l59 053E  
                              l75 05B7                                l76 05B9                                l68 0527  
                              l79 0532                                l96 0578                                l99 0636  
                              fsr 0004                               l102 0596                               l122 0730  
                             l125 053D                               l134 0665                               l119 06CD  
                             l256 07FB                               l900 0510                               l910 059D  
                             l902 0514                               l912 05A5                               l904 0519  
                             l930 0699                               l914 05AB                               l906 051D  
                             l922 0529                               l940 06AF                               l932 06A3  
                             l916 05B0                               l908 0598                               l924 052E  
                             l942 06BB                               l934 06A6                               l918 05B8  
                             l926 0532                               l950 060B                               l944 06BC  
                             l936 06A7                               l952 0635                               l960 06D6  
                             l946 06C1                               l938 06AC                               l970 06FC  
                             l962 06DD                               l948 06C4                               l980 072B  
                             l972 0703                               l964 06ED                               l956 057A  
                             l894 053E                               l974 070F                               l966 06F2  
                             l958 06CE                               l990 07BA                               l982 0796  
                             l896 0544                               l976 0714                               l968 06F9  
                             l992 07C3                               l984 07A6                               l898 050B  
                             l978 0724                               l994 07D5                               l986 07A9  
                             l996 07E3                               l988 07B6                               l998 07E4  
                             _RE1 0049                               _RE2 004A                               u200 054A  
                             u201 0549                               u210 05B0                               u211 05AF  
                             u220 06A0                               u221 069C                               u310 07F3  
                             u311 07F2                               u320 0665                               u321 0664  
                             u305 07E5                               u234 06A3                               u250 07A6  
                             u330 0677                               u251 07A5                               u245 06B3  
                             u190 0544                               u270 07BA                               u191 0543  
                             u407 0705                               u271 07B9                               u335 0672  
                             _PEN 048A                               u345 073A                               u417 0711  
                             u265 07AB                               u290 07D5                               u355 0756  
                             u427 071F                               u291 07D4                               u365 0773  
                             u437 072D                               u285 07BC                               u447 06A9  
                             u295 07D1                               u457 06BE                               u377 06D2  
                             u467 06C8                               u387 06E1                               _SEN 0488  
                             u397 06EF                     ?_display_time 0070                               fsr0 0004  
                             indf 0000                              l1000 07ED                              l1010 064F  
                            l1002 07F3                              l1012 0655                              l1020 0560  
                            l1006 0637                              l1030 0537                              l1022 0569  
                            l1014 0666                              l1008 063F                              l1040 0761  
                            l1032 0538                              l1024 056E                              l1016 0669  
                            l1042 0769                              l1034 0734                              l1026 0533  
                            l1018 0694                              l1050 05E1                              l1044 0787  
                            l1036 074D                              l1028 0536                              l1052 05FA  
                            l1046 0788                              l1038 0751                              l1054 054B  
                            l1048 05BB                              l1056 0550                              l1058 0556  
                            STR_1 0013                              _RCEN 048B                              _R_nW 04A2  
                            _main 054B                              btemp 007E                              start 0000  
                  clcd_write@byte 0073                    clcd_write@mode 0070                     _i2c_rep_start 051D  
                    ?_init_ds1307 0070                             ?_main 0070                      ?_read_ds1307 0070  
                           _ACKEN 048C                             _ACKDT 048D                    ??_display_time 0077  
                 __end_of___lldiv 07FC                       i2c_read@ack 0071                      ?_init_config 0070  
                           _PORTD 0008                             _SSPM3 00A3                             _TRISD 0088  
                           _SSPEN 00A5                             pclath 000A                             status 0003  
                           wtemp0 007E                  init_ds1307@dummy 0077             __size_of_write_ds1307 001E  
                 __initialization 07FC                    ?_i2c_rep_start 0070                      __end_of_main 0560  
                __end_of_i2c_read 05BA                  __end_of_i2c_stop 051D                            ??_main 007E  
                   main@clock_reg 002A                      i2c_read@data 0072                      _write_ds1307 0579  
                          _SSPADD 0093                            _TRISE1 0449                            _TRISE2 044A  
                          _SSPBUF 0013                __size_of_i2c_start 0009                __size_of_i2c_write 000B  
                __end_of_get_time 05E1           _init_display_controller 06CE                         ??___lldiv 0078  
                __end_of_init_i2c 0698           __end_of__initialization 07FC              __end_of_display_time 0796  
                 ??_i2c_rep_start 0070                    __pcstackCOMMON 0070              __size_of_init_ds1307 0019  
               __end_of_i2c_start 0514                 __end_of_i2c_write 0533              __size_of_read_ds1307 002D  
            __size_of_init_config 0029                 _i2c_wait_for_idle 053E                ?_i2c_wait_for_idle 0070  
                       ?_i2c_read 0070                         ?_i2c_stop 0070                __size_of_init_clcd 000B  
       ??_init_display_controller 0074                        _clcd_print 0637               ??_i2c_wait_for_idle 0070  
                      _clcd_write 0698                        __pmaintext 054B                   read_ds1307@addr 0074  
                 read_ds1307@data 0075                           _ACKSTAT 048E         __end_of_i2c_wait_for_idle 054B  
                    init_i2c@baud 0020                           _SSPCON2 0091                         ?_get_time 0070  
                      __stringtab 0003                        ??_i2c_read 0070                        ??_i2c_stop 0070  
                       ?_init_i2c 0020                           ___lldiv 0796                           __ptext1 05E1  
                         __ptext2 0666                           __ptext3 0796                           __ptext4 0560  
                         __ptext5 0579                           __ptext6 0533                           __ptext7 06CE  
                         __ptext8 05BA                           __ptext9 060A   __end_of_init_display_controller 0731  
               __end_of_init_clcd 053E                        ??_get_time 0076             __size_of_display_time 0065  
            end_of_initialization 07FC                        ??_init_i2c 0024                       ?_clcd_print 0074  
                 ___lldiv@divisor 0070                       ?_clcd_write 0070                   ___lldiv@counter 007D  
                    _display_time 0731        __size_of_i2c_wait_for_idle 000D                     i2c_write@data 0070  
                   clcd_print@str 0074               start_initialization 07FC               __size_of_clcd_print 002F  
             __size_of_clcd_write 0036                         _i2c_start 050B                         _i2c_write 0528  
               __size_of_i2c_read 0023                 __size_of_i2c_stop 0009             __end_of_i2c_rep_start 0528  
                   ??_init_ds1307 0076                     ??_read_ds1307 0073                     ??_init_config 0028  
                       ___latbits 0002                     __pcstackBANK0 0020                        ?_i2c_start 0070  
                      ?_i2c_write 0070                 __size_of_get_time 0027                 __size_of_init_i2c 0032  
                        ?___lldiv 0070                         __pstrings 0003               __end_of_init_ds1307 0579  
             __end_of_read_ds1307 0637                         _init_clcd 0533               __end_of_init_config 060A  
                   ?_write_ds1307 0071          ?_init_display_controller 0070                      ??_clcd_print 0077  
                    ??_clcd_write 0071                       __stringbase 0012                       ??_i2c_start 0070  
              __end_of_clcd_print 0666                       ??_i2c_write 0070                __end_of_clcd_write 06CE  
                      ?_init_clcd 0070                    ??_write_ds1307 0072                          _i2c_read 0597  
                        _i2c_stop 0514                 get_time@clock_reg 0077                       _init_ds1307 0560  
                __size_of___lldiv 0066                __end_of__stringtab 0013                       _read_ds1307 060A  
                     _init_config 05E1                          __ptext10 0528                          __ptext11 051D  
                        __ptext12 0514                          __ptext13 050B                          __ptext14 0597  
                        __ptext15 053E                          __ptext16 0731                          __ptext17 0637  
                        __ptext18 0698                          _get_time 05BA                          _init_i2c 0666  
                   __size_of_main 0015             display_time@clock_reg 0029                  display_time@time 0020  
                     ??_init_clcd 0076                  ___lldiv@dividend 0074                         stringcode 000D  
            __end_of_write_ds1307 0597                  ___lldiv@quotient 0079                          stringdir 000D  
                        stringtab 0003            __size_of_i2c_rep_start 000B                  write_ds1307@addr 0072  
                write_ds1307@data 0071  
