

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Sep 24 20:27:10 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.10
    23                           ; Generated 31/07/2019 GMT
    24                           ; 
    25                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0088                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0008                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0088                     	;# 
   216  0089                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296                           
   297                           	psect	idataCOMMON
   298  05BC                     __pidataCOMMON:	
   299                           
   300                           ;initializer for read_matrix_keypad@once
   301  05BC  3401               	retlw	1
   302  0008                     _PORTD	set	8
   303  0032                     _RB2	set	50
   304  0031                     _RB1	set	49
   305  0030                     _RB0	set	48
   306  0040                     _RD0	set	64
   307  0041                     _RD1	set	65
   308  0042                     _RD2	set	66
   309  0043                     _RD3	set	67
   310  0049                     _RE1	set	73
   311  004A                     _RE2	set	74
   312  0086                     _TRISB	set	134
   313  0088                     _TRISD	set	136
   314  040F                     _nRBPU	set	1039
   315  0449                     _TRISE1	set	1097
   316  044A                     _TRISE2	set	1098
   317                           
   318                           	psect	strings
   319  0003                     __pstrings:	
   320  0003                     stringtab:	
   321  0003                     __stringtab:	
   322  0003                     stringcode:	
   323                           ;	String table - string pointers are 1 byte each
   324                           
   325  0003                     stringdir:	
   326  0003  3000               	movlw	high stringdir
   327  0004  008A               	movwf	10
   328  0005  0804               	movf	4,w
   329  0006  0A84               	incf	4,f
   330  0007  0782               	addwf	2,f
   331  0008                     __stringbase:	
   332  0008  3400               	retlw	0
   333  0009                     __end_of__stringtab:	
   334  0009                     STR_4:	
   335  0009  3420               	retlw	32	;' '
   336  000A  344D               	retlw	77	;'M'
   337  000B  3461               	retlw	97	;'a'
   338  000C  3474               	retlw	116	;'t'
   339  000D  3472               	retlw	114	;'r'
   340  000E  3469               	retlw	105	;'i'
   341  000F  3478               	retlw	120	;'x'
   342  0010  3420               	retlw	32	;' '
   343  0011  3420               	retlw	32	;' '
   344  0012  344B               	retlw	75	;'K'
   345  0013  3465               	retlw	101	;'e'
   346  0014  3479               	retlw	121	;'y'
   347  0015  3470               	retlw	112	;'p'
   348  0016  3461               	retlw	97	;'a'
   349  0017  3464               	retlw	100	;'d'
   350  0018  3420               	retlw	32	;' '
   351  0019  3400               	retlw	0
   352  001A                     STR_3:	
   353  001A  3420               	retlw	32	;' '
   354  001B  344E               	retlw	78	;'N'
   355  001C  346F               	retlw	111	;'o'
   356  001D  3420               	retlw	32	;' '
   357  001E  344B               	retlw	75	;'K'
   358  001F  3465               	retlw	101	;'e'
   359  0020  3479               	retlw	121	;'y'
   360  0021  3420               	retlw	32	;' '
   361  0022  3450               	retlw	80	;'P'
   362  0023  3472               	retlw	114	;'r'
   363  0024  3465               	retlw	101	;'e'
   364  0025  3473               	retlw	115	;'s'
   365  0026  3473               	retlw	115	;'s'
   366  0027  3465               	retlw	101	;'e'
   367  0028  3464               	retlw	100	;'d'
   368  0029  3420               	retlw	32	;' '
   369  002A  3400               	retlw	0
   370  002B                     STR_2:	
   371  002B  3420               	retlw	32	;' '
   372  002C  3420               	retlw	32	;' '
   373  002D  3420               	retlw	32	;' '
   374  002E  3450               	retlw	80	;'P'
   375  002F  3472               	retlw	114	;'r'
   376  0030  3465               	retlw	101	;'e'
   377  0031  3473               	retlw	115	;'s'
   378  0032  3473               	retlw	115	;'s'
   379  0033  3465               	retlw	101	;'e'
   380  0034  3464               	retlw	100	;'d'
   381  0035  3400               	retlw	0
   382  0036                     STR_1:	
   383  0036  344B               	retlw	75	;'K'
   384  0037  3465               	retlw	101	;'e'
   385  0038  3479               	retlw	121	;'y'
   386  0039  3420               	retlw	32	;' '
   387  003A  3420               	retlw	32	;' '
   388  003B  3400               	retlw	0
   389                           
   390                           ; #config settings
   391  0000                     
   392                           	psect	cinit
   393  07F6                     start_initialization:	
   394  07F6                     __initialization:	
   395                           
   396                           ; Initialize objects allocated to COMMON
   397  07F6  120A  118A  25BC  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   398  07FB  00FC               	movwf	__pdataCOMMON& (0+127)
   399  07FC                     end_of_initialization:	
   400                           ;End of C runtime variable initialization code
   401                           
   402  07FC                     __end_of__initialization:	
   403  07FC  0183               	clrf	3
   404  07FD  120A  118A  2DFE   	ljmp	_main	;jump to C main() function
   405                           
   406                           	psect	dataCOMMON
   407  007C                     __pdataCOMMON:	
   408  007C                     read_matrix_keypad@once:	
   409  007C                     	ds	1
   410                           
   411                           	psect	cstackCOMMON
   412  0070                     __pcstackCOMMON:	
   413  0070                     ?_init_matrix_keypad:	
   414  0070                     ??_init_matrix_keypad:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0070                     ?_read_matrix_keypad:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0070                     ?_clcd_write:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0070                     ?_init_display_controller:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0070                     ?_init_clcd:	
   427                           ; 1 bytes @ 0x0
   428                           
   429  0070                     ?_display:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0070                     ?_init_config:	
   433                           ; 1 bytes @ 0x0
   434                           
   435  0070                     ?_main:	
   436                           ; 1 bytes @ 0x0
   437                           
   438  0070                     ?_scan_keypad:	
   439                           ; 1 bytes @ 0x0
   440                           
   441  0070                     ??_scan_keypad:	
   442                           ; 1 bytes @ 0x0
   443                           
   444  0070                     clcd_write@mode:	
   445                           ; 1 bytes @ 0x0
   446                           
   447  0070                     scan_keypad@i:	
   448                           ; 1 bytes @ 0x0
   449                           
   450                           
   451                           ; 2 bytes @ 0x0
   452  0070                     	ds	1
   453  0071                     ??_clcd_write:	
   454                           
   455                           ; 1 bytes @ 0x1
   456  0071                     	ds	1
   457  0072                     ??_read_matrix_keypad:	
   458                           
   459                           ; 1 bytes @ 0x2
   460  0072                     	ds	1
   461  0073                     clcd_write@byte:	
   462  0073                     read_matrix_keypad@mode:	
   463                           ; 1 bytes @ 0x3
   464                           
   465                           
   466                           ; 1 bytes @ 0x3
   467  0073                     	ds	1
   468  0074                     ??_init_display_controller:	
   469  0074                     ?_clcd_putch:	
   470                           ; 1 bytes @ 0x4
   471                           
   472  0074                     ?_clcd_print:	
   473                           ; 1 bytes @ 0x4
   474                           
   475  0074                     clcd_putch@addr:	
   476                           ; 1 bytes @ 0x4
   477                           
   478  0074                     clcd_print@addr:	
   479                           ; 1 bytes @ 0x4
   480                           
   481  0074                     read_matrix_keypad@key:	
   482                           ; 1 bytes @ 0x4
   483                           
   484                           
   485                           ; 1 bytes @ 0x4
   486  0074                     	ds	1
   487  0075                     ??_clcd_putch:	
   488  0075                     ??_clcd_print:	
   489                           ; 1 bytes @ 0x5
   490                           
   491  0075                     clcd_putch@data:	
   492                           ; 1 bytes @ 0x5
   493                           
   494                           
   495                           ; 1 bytes @ 0x5
   496  0075                     	ds	1
   497  0076                     ??_init_clcd:	
   498  0076                     clcd_print@str:	
   499                           ; 1 bytes @ 0x6
   500                           
   501                           
   502                           ; 1 bytes @ 0x6
   503  0076                     	ds	1
   504  0077                     ??_display:	
   505  0077                     ??_init_config:	
   506                           ; 1 bytes @ 0x7
   507                           
   508                           
   509                           ; 1 bytes @ 0x7
   510  0077                     	ds	2
   511  0079                     display@key:	
   512                           
   513                           ; 1 bytes @ 0x9
   514  0079                     	ds	1
   515  007A                     ??_main:	
   516                           
   517                           ; 1 bytes @ 0xA
   518  007A                     	ds	1
   519  007B                     main@key:	
   520                           
   521                           ; 1 bytes @ 0xB
   522  007B                     	ds	1
   523                           
   524                           	psect	maintext
   525  05FE                     __pmaintext:	
   526 ;;
   527 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   528 ;;
   529 ;; *************** function _main *****************
   530 ;; Defined at:
   531 ;;		line 47 in file "main.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;  key             1   11[COMMON] unsigned char 
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : B00/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         0       0       0       0       0
   546 ;;      Locals:         1       0       0       0       0
   547 ;;      Temps:          1       0       0       0       0
   548 ;;      Totals:         2       0       0       0       0
   549 ;;Total ram usage:        2 bytes
   550 ;; Hardware stack levels required when called:    4
   551 ;; This function calls:
   552 ;;		_display
   553 ;;		_init_config
   554 ;;		_read_matrix_keypad
   555 ;; This function is called by:
   556 ;;		Startup code after reset
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           
   561                           ;psect for function _main
   562  05FE                     _main:	
   563  05FE                     l1045:	
   564                           ;incstack = 0
   565                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   566                           
   567  05FE  120A  118A  25E9  120A  118A  	fcall	_init_config
   568  0603                     l1047:	
   569  0603  3000               	movlw	0
   570  0604  120A  118A  2616  120A  118A  	fcall	_read_matrix_keypad
   571  0609  00FA               	movwf	??_main
   572  060A  087A               	movf	??_main,w
   573  060B  00FB               	movwf	main@key
   574  060C                     l1049:	
   575  060C  087B               	movf	main@key,w
   576  060D  120A  118A  2699  120A  118A  	fcall	_display
   577  0612  2E03               	goto	l1047
   578  0613  120A  118A  2800   	ljmp	start
   579  0616                     __end_of_main:	
   580                           
   581                           	psect	text1
   582  0616                     __ptext1:	
   583 ;; *************** function _read_matrix_keypad *****************
   584 ;; Defined at:
   585 ;;		line 111 in file "matrix_keypad.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  mode            1    wreg     unsigned char 
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  mode            1    3[COMMON] unsigned char 
   590 ;;  key             1    4[COMMON] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      unsigned char 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0, pclath, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         2       0       0       0       0
   602 ;;      Temps:          1       0       0       0       0
   603 ;;      Totals:         3       0       0       0       0
   604 ;;Total ram usage:        3 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    1
   607 ;; This function calls:
   608 ;;		_scan_keypad
   609 ;; This function is called by:
   610 ;;		_main
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           
   615                           ;psect for function _read_matrix_keypad
   616  0616                     _read_matrix_keypad:	
   617                           
   618                           ;incstack = 0
   619                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
   620                           ;read_matrix_keypad@mode stored from wreg
   621  0616  00F3               	movwf	read_matrix_keypad@mode
   622  0617                     l905:	
   623                           
   624                           ;matrix_keypad.c: 111: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 112: {;matrix_keypad.c: 113:     static unsigned char once = 1;;matrix_keypad.c: 11
      +                          4:     unsigned char key;;matrix_keypad.c: 116:     key = scan_keypad();
   625  0617  120A  118A  274A  120A  118A  	fcall	_scan_keypad
   626  061C  00F2               	movwf	??_read_matrix_keypad
   627  061D  0872               	movf	??_read_matrix_keypad,w
   628  061E  00F4               	movwf	read_matrix_keypad@key
   629  061F                     l907:	
   630                           
   631                           ;matrix_keypad.c: 118:     if (mode == 0)
   632  061F  0873               	movf	read_matrix_keypad@mode,w
   633  0620  1D03               	btfss	3,2
   634  0621  2E23               	goto	u221
   635  0622  2E24               	goto	u220
   636  0623                     u221:	
   637  0623  2E26               	goto	l915
   638  0624                     u220:	
   639  0624                     l909:	
   640                           
   641                           ;matrix_keypad.c: 119:     {;matrix_keypad.c: 120:         return key;
   642  0624  0874               	movf	read_matrix_keypad@key,w
   643  0625  2E3A               	goto	l127
   644  0626                     l915:	
   645                           
   646                           ;matrix_keypad.c: 123:     {;matrix_keypad.c: 124:         if ((key != 0xFF) && once)
   647  0626  0A74               	incf	read_matrix_keypad@key,w
   648  0627  1903               	btfsc	3,2
   649  0628  2E2A               	goto	u231
   650  0629  2E2B               	goto	u230
   651  062A                     u231:	
   652  062A  2E32               	goto	l927
   653  062B                     u230:	
   654  062B                     l917:	
   655  062B  087C               	movf	read_matrix_keypad@once,w
   656  062C  1903               	btfsc	3,2
   657  062D  2E2F               	goto	u241
   658  062E  2E30               	goto	u240
   659  062F                     u241:	
   660  062F  2E32               	goto	l927
   661  0630                     u240:	
   662  0630                     l919:	
   663                           
   664                           ;matrix_keypad.c: 125:         {;matrix_keypad.c: 126:             once = 0;
   665  0630  01FC               	clrf	read_matrix_keypad@once
   666  0631  2E24               	goto	l909
   667  0632                     l927:	
   668  0632  0A74               	incf	read_matrix_keypad@key,w
   669  0633  1D03               	btfss	3,2
   670  0634  2E36               	goto	u251
   671  0635  2E37               	goto	u250
   672  0636                     u251:	
   673  0636  2E39               	goto	l931
   674  0637                     u250:	
   675  0637                     l929:	
   676                           
   677                           ;matrix_keypad.c: 131:         {;matrix_keypad.c: 132:             once = 1;
   678  0637  01FC               	clrf	read_matrix_keypad@once
   679  0638  0AFC               	incf	read_matrix_keypad@once,f
   680  0639                     l931:	
   681                           
   682                           ;matrix_keypad.c: 136:     return 0xFF;
   683  0639  30FF               	movlw	255
   684  063A                     l127:	
   685  063A  0008               	return
   686  063B                     __end_of_read_matrix_keypad:	
   687                           
   688                           	psect	text2
   689  074A                     __ptext2:	
   690 ;; *************** function _scan_keypad *****************
   691 ;; Defined at:
   692 ;;		line 24 in file "matrix_keypad.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;  i               2    0[COMMON] int 
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      unsigned char 
   699 ;; Registers used:
   700 ;;		wreg, status,2, status,0
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   706 ;;      Params:         0       0       0       0       0
   707 ;;      Locals:         2       0       0       0       0
   708 ;;      Temps:          0       0       0       0       0
   709 ;;      Totals:         2       0       0       0       0
   710 ;;Total ram usage:        2 bytes
   711 ;; Hardware stack levels used:    1
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_read_matrix_keypad
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           
   720                           ;psect for function _scan_keypad
   721  074A                     _scan_keypad:	
   722  074A                     l797:	
   723                           ;incstack = 0
   724                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
   725                           
   726                           
   727                           ;matrix_keypad.c: 26:     int i;;matrix_keypad.c: 28:     RD3 = 0;
   728  074A  1283               	bcf	3,5	;RP0=0, select bank0
   729  074B  1303               	bcf	3,6	;RP1=0, select bank0
   730  074C  1188               	bcf	8,3	;volatile
   731                           
   732                           ;matrix_keypad.c: 29:     RD2 = 1;
   733  074D  1508               	bsf	8,2	;volatile
   734                           
   735                           ;matrix_keypad.c: 30:     RD1 = 1;
   736  074E  1488               	bsf	8,1	;volatile
   737                           
   738                           ;matrix_keypad.c: 31:     RD0 = 1;
   739  074F  1408               	bsf	8,0	;volatile
   740  0750                     l799:	
   741                           
   742                           ;matrix_keypad.c: 33:     for (i = 100; i--; );
   743  0750  3064               	movlw	100
   744  0751  00F0               	movwf	scan_keypad@i
   745  0752  3000               	movlw	0
   746  0753  00F1               	movwf	scan_keypad@i+1
   747  0754                     l801:	
   748  0754  30FF               	movlw	255
   749  0755  07F0               	addwf	scan_keypad@i,f
   750  0756  1803               	skipnc
   751  0757  0AF1               	incf	scan_keypad@i+1,f
   752  0758  30FF               	movlw	255
   753  0759  07F1               	addwf	scan_keypad@i+1,f
   754  075A  0A70               	incf	scan_keypad@i,w
   755  075B  1D03               	skipz
   756  075C  2F61               	goto	u51
   757  075D  0A71               	incf	scan_keypad@i+1,w
   758  075E  1D03               	btfss	3,2
   759  075F  2F61               	goto	u51
   760  0760  2F62               	goto	u50
   761  0761                     u51:	
   762  0761  2F54               	goto	l801
   763  0762                     u50:	
   764  0762                     l91:	
   765                           
   766                           ;matrix_keypad.c: 35:     if (RB0 == 0)
   767  0762  1283               	bcf	3,5	;RP0=0, select bank0
   768  0763  1303               	bcf	3,6	;RP1=0, select bank0
   769  0764  1806               	btfsc	6,0	;volatile
   770  0765  2F67               	goto	u61
   771  0766  2F68               	goto	u60
   772  0767                     u61:	
   773  0767  2F6A               	goto	l92
   774  0768                     u60:	
   775  0768                     l803:	
   776                           
   777                           ;matrix_keypad.c: 36:     {;matrix_keypad.c: 37:         return 1;
   778  0768  3001               	movlw	1
   779  0769  2FF5               	goto	l93
   780  076A                     l92:	
   781                           ;matrix_keypad.c: 39:     else if (RB1 == 0)
   782                           
   783  076A  1886               	btfsc	6,1	;volatile
   784  076B  2F6D               	goto	u71
   785  076C  2F6E               	goto	u70
   786  076D                     u71:	
   787  076D  2F70               	goto	l95
   788  076E                     u70:	
   789  076E                     l809:	
   790                           
   791                           ;matrix_keypad.c: 40:     {;matrix_keypad.c: 41:         return 2;
   792  076E  3002               	movlw	2
   793  076F  2FF5               	goto	l93
   794  0770                     l95:	
   795                           ;matrix_keypad.c: 43:     else if (RB2 == 0)
   796                           
   797  0770  1906               	btfsc	6,2	;volatile
   798  0771  2F73               	goto	u81
   799  0772  2F74               	goto	u80
   800  0773                     u81:	
   801  0773  2F76               	goto	l94
   802  0774                     u80:	
   803  0774                     l815:	
   804                           
   805                           ;matrix_keypad.c: 44:     {;matrix_keypad.c: 45:         return 3;
   806  0774  3003               	movlw	3
   807  0775  2FF5               	goto	l93
   808  0776                     l94:	
   809                           
   810                           ;matrix_keypad.c: 48:     RD3 = 1;
   811  0776  1588               	bsf	8,3	;volatile
   812                           
   813                           ;matrix_keypad.c: 49:     RD2 = 0;
   814  0777  1108               	bcf	8,2	;volatile
   815                           
   816                           ;matrix_keypad.c: 50:     RD1 = 1;
   817  0778  1488               	bsf	8,1	;volatile
   818                           
   819                           ;matrix_keypad.c: 51:     RD0 = 1;
   820  0779  1408               	bsf	8,0	;volatile
   821  077A                     l819:	
   822                           
   823                           ;matrix_keypad.c: 53:     for (i = 100; i--; );
   824  077A  3064               	movlw	100
   825  077B  00F0               	movwf	scan_keypad@i
   826  077C  3000               	movlw	0
   827  077D  00F1               	movwf	scan_keypad@i+1
   828  077E                     l821:	
   829  077E  30FF               	movlw	255
   830  077F  07F0               	addwf	scan_keypad@i,f
   831  0780  1803               	skipnc
   832  0781  0AF1               	incf	scan_keypad@i+1,f
   833  0782  30FF               	movlw	255
   834  0783  07F1               	addwf	scan_keypad@i+1,f
   835  0784  0A70               	incf	scan_keypad@i,w
   836  0785  1D03               	skipz
   837  0786  2F8B               	goto	u91
   838  0787  0A71               	incf	scan_keypad@i+1,w
   839  0788  1D03               	btfss	3,2
   840  0789  2F8B               	goto	u91
   841  078A  2F8C               	goto	u90
   842  078B                     u91:	
   843  078B  2F7E               	goto	l821
   844  078C                     u90:	
   845  078C                     l100:	
   846                           
   847                           ;matrix_keypad.c: 55:     if (RB0 == 0)
   848  078C  1283               	bcf	3,5	;RP0=0, select bank0
   849  078D  1303               	bcf	3,6	;RP1=0, select bank0
   850  078E  1806               	btfsc	6,0	;volatile
   851  078F  2F91               	goto	u101
   852  0790  2F92               	goto	u100
   853  0791                     u101:	
   854  0791  2F94               	goto	l101
   855  0792                     u100:	
   856  0792                     l823:	
   857                           
   858                           ;matrix_keypad.c: 56:     {;matrix_keypad.c: 57:         return 4;
   859  0792  3004               	movlw	4
   860  0793  2FF5               	goto	l93
   861  0794                     l101:	
   862                           ;matrix_keypad.c: 59:     else if (RB1 == 0)
   863                           
   864  0794  1886               	btfsc	6,1	;volatile
   865  0795  2F97               	goto	u111
   866  0796  2F98               	goto	u110
   867  0797                     u111:	
   868  0797  2F9A               	goto	l103
   869  0798                     u110:	
   870  0798                     l829:	
   871                           
   872                           ;matrix_keypad.c: 60:     {;matrix_keypad.c: 61:         return 5;
   873  0798  3005               	movlw	5
   874  0799  2FF5               	goto	l93
   875  079A                     l103:	
   876                           ;matrix_keypad.c: 63:     else if (RB2 == 0)
   877                           
   878  079A  1906               	btfsc	6,2	;volatile
   879  079B  2F9D               	goto	u121
   880  079C  2F9E               	goto	u120
   881  079D                     u121:	
   882  079D  2FA0               	goto	l102
   883  079E                     u120:	
   884  079E                     l835:	
   885                           
   886                           ;matrix_keypad.c: 64:     {;matrix_keypad.c: 65:         return 6;
   887  079E  3006               	movlw	6
   888  079F  2FF5               	goto	l93
   889  07A0                     l102:	
   890                           
   891                           ;matrix_keypad.c: 68:     RD3 = 1;
   892  07A0  1588               	bsf	8,3	;volatile
   893                           
   894                           ;matrix_keypad.c: 69:     RD2 = 1;
   895  07A1  1508               	bsf	8,2	;volatile
   896                           
   897                           ;matrix_keypad.c: 70:     RD1 = 0;
   898  07A2  1088               	bcf	8,1	;volatile
   899                           
   900                           ;matrix_keypad.c: 71:     RD0 = 1;
   901  07A3  1408               	bsf	8,0	;volatile
   902  07A4                     l839:	
   903                           
   904                           ;matrix_keypad.c: 73:     for (i = 100; i--; );
   905  07A4  3064               	movlw	100
   906  07A5  00F0               	movwf	scan_keypad@i
   907  07A6  3000               	movlw	0
   908  07A7  00F1               	movwf	scan_keypad@i+1
   909  07A8                     l841:	
   910  07A8  30FF               	movlw	255
   911  07A9  07F0               	addwf	scan_keypad@i,f
   912  07AA  1803               	skipnc
   913  07AB  0AF1               	incf	scan_keypad@i+1,f
   914  07AC  30FF               	movlw	255
   915  07AD  07F1               	addwf	scan_keypad@i+1,f
   916  07AE  0A70               	incf	scan_keypad@i,w
   917  07AF  1D03               	skipz
   918  07B0  2FB5               	goto	u131
   919  07B1  0A71               	incf	scan_keypad@i+1,w
   920  07B2  1D03               	btfss	3,2
   921  07B3  2FB5               	goto	u131
   922  07B4  2FB6               	goto	u130
   923  07B5                     u131:	
   924  07B5  2FA8               	goto	l841
   925  07B6                     u130:	
   926  07B6                     l108:	
   927                           
   928                           ;matrix_keypad.c: 75:     if (RB0 == 0)
   929  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   930  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   931  07B8  1806               	btfsc	6,0	;volatile
   932  07B9  2FBB               	goto	u141
   933  07BA  2FBC               	goto	u140
   934  07BB                     u141:	
   935  07BB  2FBE               	goto	l109
   936  07BC                     u140:	
   937  07BC                     l843:	
   938                           
   939                           ;matrix_keypad.c: 76:     {;matrix_keypad.c: 77:         return 7;
   940  07BC  3007               	movlw	7
   941  07BD  2FF5               	goto	l93
   942  07BE                     l109:	
   943                           ;matrix_keypad.c: 79:     else if (RB1 == 0)
   944                           
   945  07BE  1886               	btfsc	6,1	;volatile
   946  07BF  2FC1               	goto	u151
   947  07C0  2FC2               	goto	u150
   948  07C1                     u151:	
   949  07C1  2FC4               	goto	l111
   950  07C2                     u150:	
   951  07C2                     l849:	
   952                           
   953                           ;matrix_keypad.c: 80:     {;matrix_keypad.c: 81:         return 8;
   954  07C2  3008               	movlw	8
   955  07C3  2FF5               	goto	l93
   956  07C4                     l111:	
   957                           ;matrix_keypad.c: 83:     else if (RB2 == 0)
   958                           
   959  07C4  1906               	btfsc	6,2	;volatile
   960  07C5  2FC7               	goto	u161
   961  07C6  2FC8               	goto	u160
   962  07C7                     u161:	
   963  07C7  2FCA               	goto	l110
   964  07C8                     u160:	
   965  07C8                     l855:	
   966                           
   967                           ;matrix_keypad.c: 84:     {;matrix_keypad.c: 85:         return 9;
   968  07C8  3009               	movlw	9
   969  07C9  2FF5               	goto	l93
   970  07CA                     l110:	
   971                           
   972                           ;matrix_keypad.c: 88:     RD3 = 1;
   973  07CA  1588               	bsf	8,3	;volatile
   974                           
   975                           ;matrix_keypad.c: 89:     RD2 = 1;
   976  07CB  1508               	bsf	8,2	;volatile
   977                           
   978                           ;matrix_keypad.c: 90:     RD1 = 1;
   979  07CC  1488               	bsf	8,1	;volatile
   980                           
   981                           ;matrix_keypad.c: 91:     RD0 = 0;
   982  07CD  1008               	bcf	8,0	;volatile
   983  07CE                     l859:	
   984                           
   985                           ;matrix_keypad.c: 93:     for (i = 100; i--; );
   986  07CE  3064               	movlw	100
   987  07CF  00F0               	movwf	scan_keypad@i
   988  07D0  3000               	movlw	0
   989  07D1  00F1               	movwf	scan_keypad@i+1
   990  07D2                     l861:	
   991  07D2  30FF               	movlw	255
   992  07D3  07F0               	addwf	scan_keypad@i,f
   993  07D4  1803               	skipnc
   994  07D5  0AF1               	incf	scan_keypad@i+1,f
   995  07D6  30FF               	movlw	255
   996  07D7  07F1               	addwf	scan_keypad@i+1,f
   997  07D8  0A70               	incf	scan_keypad@i,w
   998  07D9  1D03               	skipz
   999  07DA  2FDF               	goto	u171
  1000  07DB  0A71               	incf	scan_keypad@i+1,w
  1001  07DC  1D03               	btfss	3,2
  1002  07DD  2FDF               	goto	u171
  1003  07DE  2FE0               	goto	u170
  1004  07DF                     u171:	
  1005  07DF  2FD2               	goto	l861
  1006  07E0                     u170:	
  1007  07E0                     l116:	
  1008                           
  1009                           ;matrix_keypad.c: 95:     if (RB0 == 0)
  1010  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  1011  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  1012  07E2  1806               	btfsc	6,0	;volatile
  1013  07E3  2FE5               	goto	u181
  1014  07E4  2FE6               	goto	u180
  1015  07E5                     u181:	
  1016  07E5  2FE8               	goto	l117
  1017  07E6                     u180:	
  1018  07E6                     l863:	
  1019                           
  1020                           ;matrix_keypad.c: 96:     {;matrix_keypad.c: 97:         return '*';
  1021  07E6  302A               	movlw	42
  1022  07E7  2FF5               	goto	l93
  1023  07E8                     l117:	
  1024                           ;matrix_keypad.c: 99:     else if (RB1 == 0)
  1025                           
  1026  07E8  1886               	btfsc	6,1	;volatile
  1027  07E9  2FEB               	goto	u191
  1028  07EA  2FEC               	goto	u190
  1029  07EB                     u191:	
  1030  07EB  2FEE               	goto	l119
  1031  07EC                     u190:	
  1032  07EC                     l869:	
  1033                           
  1034                           ;matrix_keypad.c: 100:     {;matrix_keypad.c: 101:         return 0;
  1035  07EC  3000               	movlw	0
  1036  07ED  2FF5               	goto	l93
  1037  07EE                     l119:	
  1038                           ;matrix_keypad.c: 103:     else if (RB2 == 0)
  1039                           
  1040  07EE  1906               	btfsc	6,2	;volatile
  1041  07EF  2FF1               	goto	u201
  1042  07F0  2FF2               	goto	u200
  1043  07F1                     u201:	
  1044  07F1  2FF4               	goto	l879
  1045  07F2                     u200:	
  1046  07F2                     l875:	
  1047                           
  1048                           ;matrix_keypad.c: 104:     {;matrix_keypad.c: 105:         return '#';
  1049  07F2  3023               	movlw	35
  1050  07F3  2FF5               	goto	l93
  1051  07F4                     l879:	
  1052                           
  1053                           ;matrix_keypad.c: 108:     return 0xFF;
  1054  07F4  30FF               	movlw	255
  1055  07F5                     l93:	
  1056  07F5  0008               	return
  1057  07F6                     __end_of_scan_keypad:	
  1058                           
  1059                           	psect	text3
  1060  05E9                     __ptext3:	
  1061 ;; *************** function _init_config *****************
  1062 ;; Defined at:
  1063 ;;		line 40 in file "main.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;		None
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;		None
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1077 ;;      Params:         0       0       0       0       0
  1078 ;;      Locals:         0       0       0       0       0
  1079 ;;      Temps:          1       0       0       0       0
  1080 ;;      Totals:         1       0       0       0       0
  1081 ;;Total ram usage:        1 bytes
  1082 ;; Hardware stack levels used:    1
  1083 ;; Hardware stack levels required when called:    3
  1084 ;; This function calls:
  1085 ;;		_clcd_print
  1086 ;;		_init_clcd
  1087 ;;		_init_matrix_keypad
  1088 ;; This function is called by:
  1089 ;;		_main
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           
  1094                           ;psect for function _init_config
  1095  05E9                     _init_config:	
  1096  05E9                     l1041:	
  1097                           ;incstack = 0
  1098                           ; Regs used in _init_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1099                           
  1100                           
  1101                           ;main.c: 41:     while (1) {
  1102  05E9  120A  118A  25BD  120A  118A  	fcall	_init_clcd
  1103                           
  1104                           ;main.c: 42:         key = read_matrix_keypad(0);
  1105  05EE  120A  118A  25C8  120A  118A  	fcall	_init_matrix_keypad
  1106  05F3                     l1043:	
  1107                           
  1108                           ;main.c: 44:     }
  1109  05F3  3080               	movlw	128
  1110  05F4  00F7               	movwf	??_init_config
  1111  05F5  0877               	movf	??_init_config,w
  1112  05F6  00F4               	movwf	clcd_print@addr
  1113  05F7  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1114  05F8  120A  118A  263B  120A  118A  	fcall	_clcd_print
  1115  05FD                     l55:	
  1116  05FD  0008               	return
  1117  05FE                     __end_of_init_config:	
  1118                           
  1119                           	psect	text4
  1120  05C8                     __ptext4:	
  1121 ;; *************** function _init_matrix_keypad *****************
  1122 ;; Defined at:
  1123 ;;		line 4 in file "matrix_keypad.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;		None
  1126 ;; Auto vars:     Size  Location     Type
  1127 ;;		None
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, status,2
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         0       0       0       0       0
  1138 ;;      Locals:         0       0       0       0       0
  1139 ;;      Temps:          0       0       0       0       0
  1140 ;;      Totals:         0       0       0       0       0
  1141 ;;Total ram usage:        0 bytes
  1142 ;; Hardware stack levels used:    1
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_init_config
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           
  1151                           ;psect for function _init_matrix_keypad
  1152  05C8                     _init_matrix_keypad:	
  1153  05C8                     l785:	
  1154                           ;incstack = 0
  1155                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  1156                           
  1157                           
  1158                           ;matrix_keypad.c: 8:     TRISB = TRISB | 0x07;
  1159  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  1160  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  1161  05CA  0806               	movf	6,w	;volatile
  1162  05CB  3807               	iorlw	7
  1163  05CC  0086               	movwf	6	;volatile
  1164                           
  1165                           ;matrix_keypad.c: 12:     TRISD = TRISD & 0xF0;
  1166  05CD  0808               	movf	8,w	;volatile
  1167  05CE  39F0               	andlw	240
  1168  05CF  0088               	movwf	8	;volatile
  1169  05D0                     l787:	
  1170                           
  1171                           ;matrix_keypad.c: 15:     nRBPU = 0;
  1172  05D0  1381               	bcf	1,7	;volatile
  1173  05D1                     l789:	
  1174                           
  1175                           ;matrix_keypad.c: 18:     RD3 = 1;
  1176  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  1177  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  1178  05D3  1588               	bsf	8,3	;volatile
  1179  05D4                     l791:	
  1180                           
  1181                           ;matrix_keypad.c: 19:     RD2 = 1;
  1182  05D4  1508               	bsf	8,2	;volatile
  1183  05D5                     l793:	
  1184                           
  1185                           ;matrix_keypad.c: 20:     RD1 = 1;
  1186  05D5  1488               	bsf	8,1	;volatile
  1187  05D6                     l795:	
  1188                           
  1189                           ;matrix_keypad.c: 21:     RD0 = 1;
  1190  05D6  1408               	bsf	8,0	;volatile
  1191  05D7                     l86:	
  1192  05D7  0008               	return
  1193  05D8                     __end_of_init_matrix_keypad:	
  1194                           
  1195                           	psect	text5
  1196  05BD                     __ptext5:	
  1197 ;; *************** function _init_clcd *****************
  1198 ;; Defined at:
  1199 ;;		line 44 in file "clcd.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0, pclath, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1213 ;;      Params:         0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0
  1216 ;;      Totals:         0       0       0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    2
  1220 ;; This function calls:
  1221 ;;		_init_display_controller
  1222 ;; This function is called by:
  1223 ;;		_init_config
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           
  1227                           
  1228                           ;psect for function _init_clcd
  1229  05BD                     _init_clcd:	
  1230  05BD                     l1005:	
  1231                           ;incstack = 0
  1232                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1233                           
  1234                           
  1235                           ;clcd.c: 47:     TRISD = 0x00;
  1236  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  1237  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  1238  05BF  0188               	clrf	8	;volatile
  1239  05C0                     l1007:	
  1240                           
  1241                           ;clcd.c: 50:     TRISE2 = 0;
  1242  05C0  1109               	bcf	9,2	;volatile
  1243  05C1                     l1009:	
  1244                           
  1245                           ;clcd.c: 51:     TRISE1 = 0;
  1246  05C1  1089               	bcf	9,1	;volatile
  1247  05C2                     l1011:	
  1248                           
  1249                           ;clcd.c: 53:     init_display_controller();
  1250  05C2  120A  118A  26E7  120A  118A  	fcall	_init_display_controller
  1251  05C7                     l23:	
  1252  05C7  0008               	return
  1253  05C8                     __end_of_init_clcd:	
  1254                           
  1255                           	psect	text6
  1256  06E7                     __ptext6:	
  1257 ;; *************** function _init_display_controller *****************
  1258 ;; Defined at:
  1259 ;;		line 21 in file "clcd.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, pclath, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1273 ;;      Params:         0       0       0       0       0
  1274 ;;      Locals:         0       0       0       0       0
  1275 ;;      Temps:          2       0       0       0       0
  1276 ;;      Totals:         2       0       0       0       0
  1277 ;;Total ram usage:        2 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    1
  1280 ;; This function calls:
  1281 ;;		_clcd_write
  1282 ;; This function is called by:
  1283 ;;		_init_clcd
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _init_display_controller
  1289  06E7                     _init_display_controller:	
  1290  06E7                     l981:	
  1291                           ;incstack = 0
  1292                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1293                           
  1294                           
  1295                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1296  06E7  30C3               	movlw	195
  1297  06E8  00F5               	movwf	??_init_display_controller+1
  1298  06E9  30CD               	movlw	205
  1299  06EA  00F4               	movwf	??_init_display_controller
  1300  06EB                     u317:	
  1301  06EB  0BF4               	decfsz	??_init_display_controller,f
  1302  06EC  2EEB               	goto	u317
  1303  06ED  0BF5               	decfsz	??_init_display_controller+1,f
  1304  06EE  2EEB               	goto	u317
  1305  06EF                     l983:	
  1306                           
  1307                           ;clcd.c: 27:     clcd_write(0x33, 0);
  1308  06EF  01F0               	clrf	clcd_write@mode
  1309  06F0  3033               	movlw	51
  1310  06F1  120A  118A  2663  120A  118A  	fcall	_clcd_write
  1311  06F6                     l985:	
  1312                           
  1313                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1314  06F6  301B               	movlw	27
  1315  06F7  00F5               	movwf	??_init_display_controller+1
  1316  06F8  309E               	movlw	158
  1317  06F9  00F4               	movwf	??_init_display_controller
  1318  06FA                     u327:	
  1319  06FA  0BF4               	decfsz	??_init_display_controller,f
  1320  06FB  2EFA               	goto	u327
  1321  06FC  0BF5               	decfsz	??_init_display_controller+1,f
  1322  06FD  2EFA               	goto	u327
  1323  06FE  0000               	nop
  1324                           
  1325                           ;clcd.c: 29:     clcd_write(0x33, 0);
  1326  06FF  01F0               	clrf	clcd_write@mode
  1327  0700  3033               	movlw	51
  1328  0701  120A  118A  2663  120A  118A  	fcall	_clcd_write
  1329  0706                     l987:	
  1330                           
  1331                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1332  0706  30A6               	movlw	166
  1333  0707  00F4               	movwf	??_init_display_controller
  1334  0708                     u337:	
  1335  0708  0BF4               	decfsz	??_init_display_controller,f
  1336  0709  2F08               	goto	u337
  1337  070A  0000               	nop
  1338  070B                     l989:	
  1339                           
  1340                           ;clcd.c: 31:     clcd_write(0x33, 0);
  1341  070B  01F0               	clrf	clcd_write@mode
  1342  070C  3033               	movlw	51
  1343  070D  120A  118A  2663  120A  118A  	fcall	_clcd_write
  1344  0712                     l991:	
  1345                           
  1346                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1347  0712  2F13               	nop2	;2 cycle nop
  1348  0713  2F14               	nop2	;2 cycle nop
  1349  0714  0000               	nop
  1350  0715                     l993:	
  1351                           
  1352                           ;clcd.c: 34:     clcd_write(0x02, 0);
  1353  0715  01F0               	clrf	clcd_write@mode
  1354  0716  3002               	movlw	2
  1355  0717  120A  118A  2663  120A  118A  	fcall	_clcd_write
  1356  071C                     l995:	
  1357                           
  1358                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1359  071C  30A6               	movlw	166
  1360  071D  00F4               	movwf	??_init_display_controller
  1361  071E                     u347:	
  1362  071E  0BF4               	decfsz	??_init_display_controller,f
  1363  071F  2F1E               	goto	u347
  1364  0720  0000               	nop
  1365                           
  1366                           ;clcd.c: 36:     clcd_write(0x28, 0);
  1367  0721  01F0               	clrf	clcd_write@mode
  1368  0722  3028               	movlw	40
  1369  0723  120A  118A  2663  120A  118A  	fcall	_clcd_write
  1370  0728                     l997:	
  1371                           
  1372                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1373  0728  30A6               	movlw	166
  1374  0729  00F4               	movwf	??_init_display_controller
  1375  072A                     u357:	
  1376  072A  0BF4               	decfsz	??_init_display_controller,f
  1377  072B  2F2A               	goto	u357
  1378  072C  0000               	nop
  1379  072D                     l999:	
  1380                           
  1381                           ;clcd.c: 38:     clcd_write(0x01, 0);
  1382  072D  01F0               	clrf	clcd_write@mode
  1383  072E  3001               	movlw	1
  1384  072F  120A  118A  2663  120A  118A  	fcall	_clcd_write
  1385                           
  1386                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1387  0734  3004               	movlw	4
  1388  0735  00F5               	movwf	??_init_display_controller+1
  1389  0736  303D               	movlw	61
  1390  0737  00F4               	movwf	??_init_display_controller
  1391  0738                     u367:	
  1392  0738  0BF4               	decfsz	??_init_display_controller,f
  1393  0739  2F38               	goto	u367
  1394  073A  0BF5               	decfsz	??_init_display_controller+1,f
  1395  073B  2F38               	goto	u367
  1396  073C  2F3D               	nop2
  1397  073D                     l1001:	
  1398                           
  1399                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  1400  073D  01F0               	clrf	clcd_write@mode
  1401  073E  300C               	movlw	12
  1402  073F  120A  118A  2663  120A  118A  	fcall	_clcd_write
  1403  0744                     l1003:	
  1404                           
  1405                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1406  0744  30A6               	movlw	166
  1407  0745  00F4               	movwf	??_init_display_controller
  1408  0746                     u377:	
  1409  0746  0BF4               	decfsz	??_init_display_controller,f
  1410  0747  2F46               	goto	u377
  1411  0748  0000               	nop
  1412  0749                     l20:	
  1413  0749  0008               	return
  1414  074A                     __end_of_init_display_controller:	
  1415                           
  1416                           	psect	text7
  1417  0699                     __ptext7:	
  1418 ;; *************** function _display *****************
  1419 ;; Defined at:
  1420 ;;		line 15 in file "main.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  key             1    wreg     unsigned char 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  key             1    9[COMMON] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       0       0       0       0
  1435 ;;      Locals:         1       0       0       0       0
  1436 ;;      Temps:          2       0       0       0       0
  1437 ;;      Totals:         3       0       0       0       0
  1438 ;;Total ram usage:        3 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    2
  1441 ;; This function calls:
  1442 ;;		_clcd_print
  1443 ;;		_clcd_putch
  1444 ;; This function is called by:
  1445 ;;		_main
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           
  1450                           ;psect for function _display
  1451  0699                     _display:	
  1452                           
  1453                           ;incstack = 0
  1454                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1455                           ;display@key stored from wreg
  1456  0699  00F9               	movwf	display@key
  1457  069A                     l1023:	
  1458                           
  1459                           ;main.c: 15:                 clcd_putch(key, (0xC0 + 5));;main.c: 16:                 br
      +                          eak;;main.c: 17:             default:
  1460  069A  0A79               	incf	display@key,w
  1461  069B  1903               	btfsc	3,2
  1462  069C  2E9E               	goto	u301
  1463  069D  2E9F               	goto	u300
  1464  069E                     u301:	
  1465  069E  2EDC               	goto	l1035
  1466  069F                     u300:	
  1467  069F                     l1025:	
  1468                           
  1469                           ;main.c: 18:                 clcd_putch(key + '0', (0xC0 + 5));;main.c: 20: 
  1470  069F  30C0               	movlw	192
  1471  06A0  00F7               	movwf	??_display
  1472  06A1  0877               	movf	??_display,w
  1473  06A2  00F4               	movwf	clcd_print@addr
  1474  06A3  302E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1475  06A4  120A  118A  263B  120A  118A  	fcall	_clcd_print
  1476                           
  1477                           ;main.c: 22:     }
  1478  06A9  2EC1               	goto	l1031
  1479  06AA                     l1027:	
  1480                           
  1481                           ;main.c: 26:     }
  1482  06AA  30C5               	movlw	197
  1483  06AB  00F7               	movwf	??_display
  1484  06AC  0877               	movf	??_display,w
  1485  06AD  00F4               	movwf	clcd_putch@addr
  1486  06AE  0879               	movf	display@key,w
  1487  06AF  120A  118A  25D8  120A  118A  	fcall	_clcd_putch
  1488                           
  1489                           ;main.c: 27: }
  1490  06B4  2ED1               	goto	l1033
  1491  06B5                     l1029:	
  1492                           
  1493                           ;main.c: 29: static void init_config(void) {
  1494  06B5  30C5               	movlw	197
  1495  06B6  00F7               	movwf	??_display
  1496  06B7  0877               	movf	??_display,w
  1497  06B8  00F4               	movwf	clcd_putch@addr
  1498  06B9  0879               	movf	display@key,w
  1499  06BA  3E30               	addlw	48
  1500  06BB  120A  118A  25D8  120A  118A  	fcall	_clcd_putch
  1501                           
  1502                           ;main.c: 30:     init_clcd();
  1503  06C0  2ED1               	goto	l1033
  1504  06C1                     l1031:	
  1505  06C1  0879               	movf	display@key,w
  1506  06C2  00F7               	movwf	??_display
  1507  06C3  01F8               	clrf	??_display+1
  1508                           
  1509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1510                           ; Switch size 1, requested type "simple"
  1511                           ; Number of cases is 1, Range of values is 0 to 0
  1512                           ; switch strategies available:
  1513                           ; Name         Instructions Cycles
  1514                           ; simple_byte            4     3 (average)
  1515                           ; direct_byte           11     8 (fixed)
  1516                           ; jumptable            260     6 (fixed)
  1517                           ;	Chosen strategy is simple_byte
  1518  06C4  0878               	movf	??_display+1,w
  1519  06C5  3A00               	xorlw	0	; case 0
  1520  06C6  1903               	skipnz
  1521  06C7  2EC9               	goto	l1071
  1522  06C8  2EB5               	goto	l1029
  1523  06C9                     l1071:	
  1524                           
  1525                           ; Switch size 1, requested type "simple"
  1526                           ; Number of cases is 2, Range of values is 35 to 42
  1527                           ; switch strategies available:
  1528                           ; Name         Instructions Cycles
  1529                           ; simple_byte            7     4 (average)
  1530                           ; direct_byte           35    11 (fixed)
  1531                           ; jumptable            263     9 (fixed)
  1532                           ;	Chosen strategy is simple_byte
  1533  06C9  0877               	movf	??_display,w
  1534  06CA  3A23               	xorlw	35	; case 35
  1535  06CB  1903               	skipnz
  1536  06CC  2EAA               	goto	l1027
  1537  06CD  3A09               	xorlw	9	; case 42
  1538  06CE  1903               	skipnz
  1539  06CF  2EAA               	goto	l1027
  1540  06D0  2EB5               	goto	l1029
  1541  06D1                     l1033:	
  1542                           
  1543                           ;main.c: 32: 
  1544  06D1  30C6               	movlw	198
  1545  06D2  00F7               	movwf	??_display
  1546  06D3  0877               	movf	??_display,w
  1547  06D4  00F4               	movwf	clcd_print@addr
  1548  06D5  3023               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1549  06D6  120A  118A  263B  120A  118A  	fcall	_clcd_print
  1550                           
  1551                           ;main.c: 33:     clcd_print(" Matrix  Keypad ", (0x80 + 0));
  1552  06DB  2EE6               	goto	l52
  1553  06DC                     l1035:	
  1554                           
  1555                           ;main.c: 35: ;main.c: 36: void main(void) {
  1556  06DC  30C0               	movlw	192
  1557  06DD  00F7               	movwf	??_display
  1558  06DE  0877               	movf	??_display,w
  1559  06DF  00F4               	movwf	clcd_print@addr
  1560  06E0  3012               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1561  06E1  120A  118A  263B  120A  118A  	fcall	_clcd_print
  1562  06E6                     l52:	
  1563  06E6  0008               	return
  1564  06E7                     __end_of_display:	
  1565                           
  1566                           	psect	text8
  1567  05D8                     __ptext8:	
  1568 ;; *************** function _clcd_putch *****************
  1569 ;; Defined at:
  1570 ;;		line 56 in file "clcd.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  data            1    wreg     const unsigned char 
  1573 ;;  addr            1    4[COMMON] unsigned char 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  data            1    5[COMMON] const unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		wreg, status,2, status,0, pclath, cstack
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1585 ;;      Params:         1       0       0       0       0
  1586 ;;      Locals:         1       0       0       0       0
  1587 ;;      Temps:          0       0       0       0       0
  1588 ;;      Totals:         2       0       0       0       0
  1589 ;;Total ram usage:        2 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    1
  1592 ;; This function calls:
  1593 ;;		_clcd_write
  1594 ;; This function is called by:
  1595 ;;		_display
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           
  1600                           ;psect for function _clcd_putch
  1601  05D8                     _clcd_putch:	
  1602                           
  1603                           ;incstack = 0
  1604                           ; Regs used in _clcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1605                           ;clcd_putch@data stored from wreg
  1606  05D8  00F5               	movwf	clcd_putch@data
  1607  05D9                     l1013:	
  1608                           
  1609                           ;clcd.c: 56: void clcd_putch(const char data, unsigned char addr);clcd.c: 57: {;clcd.c: 
      +                          58:     clcd_write(addr, 0);
  1610  05D9  01F0               	clrf	clcd_write@mode
  1611  05DA  0874               	movf	clcd_putch@addr,w
  1612  05DB  120A  118A  2663  120A  118A  	fcall	_clcd_write
  1613                           
  1614                           ;clcd.c: 59:     clcd_write(data, 1);
  1615  05E0  01F0               	clrf	clcd_write@mode
  1616  05E1  0AF0               	incf	clcd_write@mode,f
  1617  05E2  0875               	movf	clcd_putch@data,w
  1618  05E3  120A  118A  2663  120A  118A  	fcall	_clcd_write
  1619  05E8                     l26:	
  1620  05E8  0008               	return
  1621  05E9                     __end_of_clcd_putch:	
  1622                           
  1623                           	psect	text9
  1624  063B                     __ptext9:	
  1625 ;; *************** function _clcd_print *****************
  1626 ;; Defined at:
  1627 ;;		line 62 in file "clcd.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  str             1    wreg     PTR const unsigned char 
  1630 ;;		 -> STR_4(17), STR_3(17), STR_2(11), STR_1(6), 
  1631 ;;  addr            1    4[COMMON] unsigned char 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  str             1    6[COMMON] PTR const unsigned char 
  1634 ;;		 -> STR_4(17), STR_3(17), STR_2(11), STR_1(6), 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         1       0       0       0       0
  1645 ;;      Locals:         1       0       0       0       0
  1646 ;;      Temps:          1       0       0       0       0
  1647 ;;      Totals:         3       0       0       0       0
  1648 ;;Total ram usage:        3 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    1
  1651 ;; This function calls:
  1652 ;;		_clcd_write
  1653 ;; This function is called by:
  1654 ;;		_display
  1655 ;;		_init_config
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           
  1660                           ;psect for function _clcd_print
  1661  063B                     _clcd_print:	
  1662                           
  1663                           ;incstack = 0
  1664                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1665                           ;clcd_print@str stored from wreg
  1666  063B  00F6               	movwf	clcd_print@str
  1667  063C                     l1015:	
  1668                           
  1669                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  1670  063C  01F0               	clrf	clcd_write@mode
  1671  063D  0874               	movf	clcd_print@addr,w
  1672  063E  120A  118A  2663  120A  118A  	fcall	_clcd_write
  1673                           
  1674                           ;clcd.c: 66:     while (*str != '\0')
  1675  0643  2E56               	goto	l1021
  1676  0644                     l1017:	
  1677                           
  1678                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  1679  0644  01F0               	clrf	clcd_write@mode
  1680  0645  0AF0               	incf	clcd_write@mode,f
  1681  0646  0876               	movf	clcd_print@str,w
  1682  0647  0084               	movwf	4
  1683  0648  120A  118A  2003  120A  118A  	fcall	stringdir
  1684  064D  120A  118A  2663  120A  118A  	fcall	_clcd_write
  1685  0652                     l1019:	
  1686                           
  1687                           ;clcd.c: 69:         str++;
  1688  0652  3001               	movlw	1
  1689  0653  00F5               	movwf	??_clcd_print
  1690  0654  0875               	movf	??_clcd_print,w
  1691  0655  07F6               	addwf	clcd_print@str,f
  1692  0656                     l1021:	
  1693                           
  1694                           ;clcd.c: 66:     while (*str != '\0')
  1695  0656  0876               	movf	clcd_print@str,w
  1696  0657  0084               	movwf	4
  1697  0658  120A  118A  2003  120A  118A  	fcall	stringdir
  1698  065D  3A00               	xorlw	0
  1699  065E  1D03               	skipz
  1700  065F  2E61               	goto	u291
  1701  0660  2E62               	goto	u290
  1702  0661                     u291:	
  1703  0661  2E44               	goto	l1017
  1704  0662                     u290:	
  1705  0662                     l32:	
  1706  0662  0008               	return
  1707  0663                     __end_of_clcd_print:	
  1708                           
  1709                           	psect	text10
  1710  0663                     __ptext10:	
  1711 ;; *************** function _clcd_write *****************
  1712 ;; Defined at:
  1713 ;;		line 4 in file "clcd.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  byte            1    wreg     unsigned char 
  1716 ;;  mode            1    0[COMMON] unsigned char 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  byte            1    3[COMMON] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         1       0       0       0       0
  1729 ;;      Locals:         1       0       0       0       0
  1730 ;;      Temps:          2       0       0       0       0
  1731 ;;      Totals:         4       0       0       0       0
  1732 ;;Total ram usage:        4 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_init_display_controller
  1738 ;;		_clcd_putch
  1739 ;;		_clcd_print
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function _clcd_write
  1745  0663                     _clcd_write:	
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  1749                           ;clcd_write@byte stored from wreg
  1750  0663  00F3               	movwf	clcd_write@byte
  1751  0664                     l961:	
  1752                           
  1753                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
  1754  0664  1870               	btfsc	clcd_write@mode,0
  1755  0665  2E67               	goto	u261
  1756  0666  2E6B               	goto	u260
  1757  0667                     u261:	
  1758  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1759  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1760  0669  1509               	bsf	9,2	;volatile
  1761  066A  2E6E               	goto	u274
  1762  066B                     u260:	
  1763  066B  1283               	bcf	3,5	;RP0=0, select bank0
  1764  066C  1303               	bcf	3,6	;RP1=0, select bank0
  1765  066D  1109               	bcf	9,2	;volatile
  1766  066E                     u274:	
  1767  066E                     l963:	
  1768                           
  1769                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  1770  066E  0873               	movf	clcd_write@byte,w
  1771  066F  39F0               	andlw	240
  1772  0670  0088               	movwf	8	;volatile
  1773  0671                     l965:	
  1774                           
  1775                           ;clcd.c: 9:     RE1 = 1;
  1776  0671  1489               	bsf	9,1	;volatile
  1777  0672                     l967:	
  1778                           
  1779                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1780  0672  30A6               	movlw	166
  1781  0673  00F1               	movwf	??_clcd_write
  1782  0674                     u387:	
  1783  0674  0BF1               	decfsz	??_clcd_write,f
  1784  0675  2E74               	goto	u387
  1785  0676  0000               	nop
  1786  0677                     l969:	
  1787                           
  1788                           ;clcd.c: 11:     RE1 = 0;
  1789  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0678  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0679  1089               	bcf	9,1	;volatile
  1792  067A                     l971:	
  1793                           
  1794                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  1795  067A  0873               	movf	clcd_write@byte,w
  1796  067B  390F               	andlw	15
  1797  067C  00F1               	movwf	??_clcd_write
  1798  067D  3003               	movlw	3
  1799  067E                     u285:	
  1800  067E  1003               	clrc
  1801  067F  0DF1               	rlf	??_clcd_write,f
  1802  0680  3EFF               	addlw	-1
  1803  0681  1D03               	skipz
  1804  0682  2E7E               	goto	u285
  1805  0683  1003               	clrc
  1806  0684  0D71               	rlf	??_clcd_write,w
  1807  0685  0088               	movwf	8	;volatile
  1808  0686                     l973:	
  1809                           
  1810                           ;clcd.c: 14:     RE1 = 1;
  1811  0686  1489               	bsf	9,1	;volatile
  1812  0687                     l975:	
  1813                           
  1814                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1815  0687  30A6               	movlw	166
  1816  0688  00F1               	movwf	??_clcd_write
  1817  0689                     u397:	
  1818  0689  0BF1               	decfsz	??_clcd_write,f
  1819  068A  2E89               	goto	u397
  1820  068B  0000               	nop
  1821  068C                     l977:	
  1822                           
  1823                           ;clcd.c: 16:     RE1 = 0;
  1824  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1825  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1826  068E  1089               	bcf	9,1	;volatile
  1827  068F                     l979:	
  1828                           
  1829                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1830  068F  301B               	movlw	27
  1831  0690  00F2               	movwf	??_clcd_write+1
  1832  0691  309E               	movlw	158
  1833  0692  00F1               	movwf	??_clcd_write
  1834  0693                     u407:	
  1835  0693  0BF1               	decfsz	??_clcd_write,f
  1836  0694  2E93               	goto	u407
  1837  0695  0BF2               	decfsz	??_clcd_write+1,f
  1838  0696  2E93               	goto	u407
  1839  0697  0000               	nop
  1840  0698                     l17:	
  1841  0698  0008               	return
  1842  0699                     __end_of_clcd_write:	
  1843  007E                     btemp	set	126	;btemp
  1844  007E                     wtemp0	set	126


Data Sizes:
    Strings     51
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[11]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_display
    _read_matrix_keypad->_scan_keypad
    _init_config->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _display->_clcd_print
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5056
                                             10 COMMON     2     2      0
                            _display
                        _init_config
                 _read_matrix_keypad
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   3     3      0     135
                                              2 COMMON     3     3      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      60
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          1     1      0    2307
                                              7 COMMON     1     1      0
                         _clcd_print
                          _init_clcd
                 _init_matrix_keypad
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _display                                              3     3      0    2591
                                              7 COMMON     3     3      0
                         _clcd_print
                         _clcd_putch
 ---------------------------------------------------------------------------------
 (2) _clcd_putch                                           2     1      1    1098
                                              4 COMMON     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     2      1    1405
                                              4 COMMON     3     2      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     _clcd_print
       _clcd_write
     _clcd_putch
       _clcd_write
   _init_config
     _clcd_print
       _clcd_write
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
   _read_matrix_keypad
     _scan_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       D      12        0.0%
ABS                  0      0       D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Sep 24 20:27:10 2021

                               pc 0002                    clcd_print@addr 0074  __size_of_init_display_controller 0063  
                              l20 0749                                l23 05C7                                l32 0662  
                              l17 0698                                l26 05E8                                l52 06E6  
                              l55 05FD                                l91 0762                                l92 076A  
                              l93 07F5                                l86 05D7                                l94 0776  
                              l95 0770                                u50 0762                                u51 0761  
                              u60 0768                                u61 0767                                u70 076E  
                              u71 076D                                u80 0774                                u81 0773  
                              u90 078C                                u91 078B                                fsr 0004  
              _init_matrix_keypad 05C8                               l100 078C                               l101 0794  
                             l110 07CA                               l102 07A0                               l111 07C4  
                             l103 079A                               l116 07E0                               l108 07B6  
                             l117 07E8                               l109 07BE                               l119 07EE  
                             l127 063A                               l801 0754                               l803 0768  
                             l821 077E                               l823 0792                               l815 0774  
                             l841 07A8                               l809 076E                               l905 0617  
                             l843 07BC                               l835 079E                               l819 077A  
                             l931 0639                               l915 0626                               l907 061F  
                             l861 07D2                               l829 0798                               l917 062B  
                             l909 0624                               l791 05D4                               l863 07E6  
                             l855 07C8                               l839 07A4                               l919 0630  
                             l927 0632                               l961 0664                               l793 05D5  
                             l785 05C8                               l849 07C2                               l929 0637  
                             l971 067A                               l963 066E                               l795 05D6  
                             l787 05D0                               l875 07F2                               l859 07CE  
                             l973 0686                               l965 0671                               l981 06E7  
                             l789 05D1                               l869 07EC                               l797 074A  
                             l975 0687                               l967 0672                               l991 0712  
                             l983 06EF                               l879 07F4                               l799 0750  
                             l977 068C                               l969 0677                               l993 0715  
                             l985 06F6                               l979 068F                               l995 071C  
                             l987 0706                               l997 0728                               l989 070B  
                             l999 072D                               _RB0 0030                               _RB1 0031  
                             _RB2 0032                               _RD0 0040                               _RD1 0041  
                             _RD2 0042                               _RE1 0049                               _RD3 0043  
                             u100 0792                               _RE2 004A                               u101 0791  
                             u110 0798                               u111 0797                               u200 07F2  
                             u120 079E                               u201 07F1                               u121 079D  
                             u130 07B6                               u131 07B5                               u300 069F  
                             u140 07BC                               u220 0624                               u301 069E  
                             u141 07BB                               u221 0623                               u150 07C2  
                             u230 062B                               u151 07C1                               u231 062A  
                             u160 07C8                               u240 0630                               u161 07C7  
                             u241 062F                               u170 07E0                               u250 0637  
                             u171 07DF                               u251 0636                               u260 066B  
                             u180 07E6                               u261 0667                               u317 06EB  
                             u181 07E5                               u190 07EC                               u407 0693  
                             u327 06FA                               u191 07EB                               u337 0708  
                             u274 066E                               u290 0662                               u291 0661  
                             u347 071E                               u285 067E                               u357 072A  
                             u367 0738                               u377 0746                               u387 0674  
                             u397 0689                    clcd_putch@addr 0074                               fsr0 0004  
                  clcd_putch@data 0075               ?_init_matrix_keypad 0070                              l1001 073D  
                            l1003 0744                              l1011 05C2                              l1021 0656  
                            l1013 05D9                              l1005 05BD                              l1015 063C  
                            l1031 06C1                              l1023 069A                              l1007 05C0  
                            l1017 0644                              l1033 06D1                              l1025 069F  
                            l1009 05C1                              l1041 05E9                              l1019 0652  
                            l1027 06AA                              l1035 06DC                              l1043 05F3  
                            l1029 06B5                              l1045 05FE                              l1071 06C9  
                            l1047 0603                              l1049 060C                              STR_1 0036  
                            STR_2 002B                              STR_3 001A                              STR_4 0009  
                            _main 05FE                              btemp 007E                              start 0000  
            ??_init_matrix_keypad 0070                    clcd_write@byte 0073                    clcd_write@mode 0070  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                      ?_init_config 0070  
                           _PORTD 0008                             _TRISB 0086                             _TRISD 0088  
                           _nRBPU 040F                   __end_of_display 06E7                _read_matrix_keypad 0616  
                           pclath 000A               ?_read_matrix_keypad 0070                             status 0003  
                           wtemp0 007E                      ?_scan_keypad 0070                   __initialization 07F6  
                    __end_of_main 0616              ??_read_matrix_keypad 0072                            ??_main 007A  
                          _TRISE1 0449                            _TRISE2 044A           _init_display_controller 06E7  
                       ??_display 0077                      __pdataCOMMON 007C           __end_of__initialization 07FC  
                  __pcstackCOMMON 0070              __size_of_init_config 0015                __size_of_init_clcd 000B  
       ??_init_display_controller 0074                        _clcd_print 063B                        _clcd_putch 05D8  
                      _clcd_write 0663              __size_of_scan_keypad 00AC                        __pmaintext 05FE  
                      __stringtab 0003       __size_of_init_matrix_keypad 0010                           __ptext1 0616  
                         __ptext2 074A                           __ptext3 05E9                           __ptext4 05C8  
                         __ptext5 05BD                           __ptext6 06E7                           __ptext7 0699  
                         __ptext8 05D8                           __ptext9 063B                           _display 0699  
 __end_of_init_display_controller 074A                 __end_of_init_clcd 05C8                           main@key 007B  
            end_of_initialization 07FC                       ?_clcd_print 0074                       ?_clcd_putch 0074  
                     ?_clcd_write 0070       __size_of_read_matrix_keypad 0025                     clcd_print@str 0076  
                      display@key 0079                     __pidataCOMMON 05BC               start_initialization 07F6  
             __size_of_clcd_print 0028                      scan_keypad@i 0070               __size_of_clcd_putch 0011  
             __size_of_clcd_write 0036            read_matrix_keypad@mode 0073            read_matrix_keypad@once 007C  
                   ??_init_config 0077                         ___latbits 0002                     ??_scan_keypad 0070  
                       __pstrings 0003                          ?_display 0070                         _init_clcd 05BD  
             __end_of_init_config 05FE          ?_init_display_controller 0070                      ??_clcd_print 0075  
                    ??_clcd_putch 0075        __end_of_init_matrix_keypad 05D8                      ??_clcd_write 0071  
             __end_of_scan_keypad 07F6                       __stringbase 0008                __end_of_clcd_print 0663  
              __end_of_clcd_putch 05E9                __end_of_clcd_write 0699                        ?_init_clcd 0070  
           read_matrix_keypad@key 0074        __end_of_read_matrix_keypad 063B                __end_of__stringtab 0009  
                     _init_config 05E9                  __size_of_display 004E                          __ptext10 0663  
                   __size_of_main 0018                       _scan_keypad 074A                       ??_init_clcd 0076  
                       stringcode 0003                          stringdir 0003                          stringtab 0003  
