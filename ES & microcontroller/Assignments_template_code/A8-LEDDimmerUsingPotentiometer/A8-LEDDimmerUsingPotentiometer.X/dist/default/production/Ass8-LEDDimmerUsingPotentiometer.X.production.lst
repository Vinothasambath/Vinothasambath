

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Jul  1 09:40:28 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0094                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0008                     _PORTD	set	8
   231  001E                     _ADRESH	set	30
   232  0040                     _RD0	set	64
   233  00FA                     _nDONE	set	250
   234  00FA                     _GO	set	250
   235  00F8                     _ADON	set	248
   236  0088                     _TRISD	set	136
   237  009E                     _ADRESL	set	158
   238  04FF                     _ADFM	set	1279
   239                           
   240                           ; #config settings
   241  0000                     
   242                           	psect	cinit
   243  07F6                     start_initialization:	
   244  07F6                     __initialization:	
   245                           
   246                           ; Clear objects allocated to COMMON
   247  07F6  01FD               	clrf	__pbssCOMMON& (0+127)
   248                           
   249                           ; Clear objects allocated to BANK0
   250  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   251  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   252  07F9  01A0               	clrf	__pbssBANK0& (0+127)
   253  07FA  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   254  07FB  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   255  07FC                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258  07FC                     __end_of__initialization:	
   259  07FC  0183               	clrf	3
   260  07FD  120A  118A  2F5B   	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	bssCOMMON
   263  007D                     __pbssCOMMON:	
   264  007D                     glow_led@loop_counter:	
   265  007D                     	ds	1
   266                           
   267                           	psect	bssBANK0
   268  0020                     __pbssBANK0:	
   269  0020                     glow_led@wait:	
   270  0020                     	ds	2
   271  0022                     glow_led@duty_cycle:	
   272  0022                     	ds	1
   273                           
   274                           	psect	cstackCOMMON
   275  0070                     __pcstackCOMMON:	
   276  0070                     ?_init_adc:	
   277  0070                     ??_init_adc:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_init_config:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ??_init_config:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_main:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_read_adc:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?___lwdiv:	
   293                           ; 2 bytes @ 0x0
   294                           
   295  0070                     ___lwdiv@divisor:	
   296                           ; 2 bytes @ 0x0
   297                           
   298                           
   299                           ; 2 bytes @ 0x0
   300  0070                     	ds	2
   301  0072                     ??_read_adc:	
   302  0072                     read_adc@adc_reg_val:	
   303                           ; 1 bytes @ 0x2
   304                           
   305  0072                     ___lwdiv@dividend:	
   306                           ; 2 bytes @ 0x2
   307                           
   308                           
   309                           ; 2 bytes @ 0x2
   310  0072                     	ds	2
   311  0074                     ??___lwdiv:	
   312                           
   313                           ; 1 bytes @ 0x4
   314  0074                     	ds	1
   315  0075                     ___lwdiv@quotient:	
   316                           
   317                           ; 2 bytes @ 0x5
   318  0075                     	ds	2
   319  0077                     ___lwdiv@counter:	
   320                           
   321                           ; 1 bytes @ 0x7
   322  0077                     	ds	1
   323  0078                     ?_glow_led:	
   324  0078                     glow_led@adc_reg_val:	
   325                           ; 1 bytes @ 0x8
   326                           
   327                           
   328                           ; 2 bytes @ 0x8
   329  0078                     	ds	2
   330  007A                     ??_glow_led:	
   331                           
   332                           ; 1 bytes @ 0xA
   333  007A                     	ds	1
   334  007B                     ??_main:	
   335  007B                     main@adc_reg_val:	
   336                           ; 1 bytes @ 0xB
   337                           
   338                           
   339                           ; 2 bytes @ 0xB
   340  007B                     	ds	2
   341                           
   342                           	psect	maintext
   343  075B                     __pmaintext:	
   344 ;;
   345 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   346 ;;
   347 ;; *************** function _main *****************
   348 ;; Defined at:
   349 ;;		line 56 in file "main.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;  adc_reg_val     2   11[COMMON] unsigned short 
   354 ;; Return value:  Size  Location     Type
   355 ;;                  1    wreg      void 
   356 ;; Registers used:
   357 ;;		wreg, status,2, status,0, pclath, cstack
   358 ;; Tracked objects:
   359 ;;		On entry : B00/0
   360 ;;		On exit  : 0/0
   361 ;;		Unchanged: 0/0
   362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   363 ;;      Params:         0       0       0       0       0
   364 ;;      Locals:         2       0       0       0       0
   365 ;;      Temps:          0       0       0       0       0
   366 ;;      Totals:         2       0       0       0       0
   367 ;;Total ram usage:        2 bytes
   368 ;; Hardware stack levels required when called:    2
   369 ;; This function calls:
   370 ;;		_glow_led
   371 ;;		_init_config
   372 ;;		_read_adc
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           
   379                           ;psect for function _main
   380  075B                     _main:	
   381  075B                     l755:	
   382                           ;incstack = 0
   383                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   384                           
   385  075B  120A  118A  273D  120A  118A  	fcall	_init_config
   386  0760                     l757:	
   387  0760  120A  118A  2749  120A  118A  	fcall	_read_adc
   388  0765  0871               	movf	?_read_adc+1,w
   389  0766  00FC               	movwf	main@adc_reg_val+1
   390  0767  0870               	movf	?_read_adc,w
   391  0768  00FB               	movwf	main@adc_reg_val
   392  0769                     l759:	
   393  0769  087C               	movf	main@adc_reg_val+1,w
   394  076A  00F9               	movwf	glow_led@adc_reg_val+1
   395  076B  087B               	movf	main@adc_reg_val,w
   396  076C  00F8               	movwf	glow_led@adc_reg_val
   397  076D  120A  118A  2776  120A  118A  	fcall	_glow_led
   398  0772  2F60               	goto	l757
   399  0773  120A  118A  2800   	ljmp	start
   400  0776                     __end_of_main:	
   401                           
   402                           	psect	text1
   403  0749                     __ptext1:	
   404 ;; *************** function _read_adc *****************
   405 ;; Defined at:
   406 ;;		line 14 in file "adc.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;  adc_reg_val     2    2[COMMON] unsigned short 
   411 ;; Return value:  Size  Location     Type
   412 ;;                  2    0[COMMON] unsigned short 
   413 ;; Registers used:
   414 ;;		wreg
   415 ;; Tracked objects:
   416 ;;		On entry : 0/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         2       0       0       0       0
   421 ;;      Locals:         2       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0
   423 ;;      Totals:         4       0       0       0       0
   424 ;;Total ram usage:        4 bytes
   425 ;; Hardware stack levels used:    1
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		_main
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           
   434                           ;psect for function _read_adc
   435  0749                     _read_adc:	
   436  0749                     l733:	
   437                           ;incstack = 0
   438                           ; Regs used in _read_adc: [wreg]
   439                           
   440                           
   441                           ;adc.c: 16:     unsigned short adc_reg_val;;adc.c: 19:     GO = 1;
   442  0749  1283               	bcf	3,5	;RP0=0, select bank0
   443  074A  1303               	bcf	3,6	;RP1=0, select bank0
   444  074B  151F               	bsf	31,2	;volatile
   445  074C                     l18:	
   446                           ;adc.c: 22:     while(nDONE);
   447                           
   448  074C  191F               	btfsc	31,2	;volatile
   449  074D  2F4F               	goto	u191
   450  074E  2F50               	goto	u190
   451  074F                     u191:	
   452  074F  2F4C               	goto	l18
   453  0750                     u190:	
   454  0750                     l735:	
   455                           
   456                           ;adc.c: 24:     adc_reg_val = ((ADRESH<<8) | ADRESL);
   457  0750  081E               	movf	30,w	;volatile
   458  0751  00F3               	movwf	read_adc@adc_reg_val+1
   459  0752  1683               	bsf	3,5	;RP0=1, select bank1
   460  0753  1303               	bcf	3,6	;RP1=0, select bank1
   461  0754  081E               	movf	30,w	;volatile
   462  0755  00F2               	movwf	read_adc@adc_reg_val
   463                           
   464                           ;adc.c: 26:     return adc_reg_val;
   465  0756  0873               	movf	read_adc@adc_reg_val+1,w
   466  0757  00F1               	movwf	?_read_adc+1
   467  0758  0872               	movf	read_adc@adc_reg_val,w
   468  0759  00F0               	movwf	?_read_adc
   469  075A                     l21:	
   470  075A  0008               	return
   471  075B                     __end_of_read_adc:	
   472                           
   473                           	psect	text2
   474  073D                     __ptext2:	
   475 ;; *************** function _init_config *****************
   476 ;; Defined at:
   477 ;;		line 49 in file "main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		status,2, status,0, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels used:    1
   497 ;; Hardware stack levels required when called:    1
   498 ;; This function calls:
   499 ;;		_init_adc
   500 ;; This function is called by:
   501 ;;		_main
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           
   506                           ;psect for function _init_config
   507  073D                     _init_config:	
   508  073D                     l697:	
   509                           ;incstack = 0
   510                           ; Regs used in _init_config: [status,2+status,0+pclath+cstack]
   511                           
   512                           
   513                           ;main.c: 50:     }
   514  073D  1283               	bcf	3,5	;RP0=0, select bank0
   515  073E  1303               	bcf	3,6	;RP1=0, select bank0
   516  073F  0188               	clrf	8	;volatile
   517                           
   518                           ;main.c: 51:     return;
   519  0740  1683               	bsf	3,5	;RP0=1, select bank1
   520  0741  1303               	bcf	3,6	;RP1=0, select bank1
   521  0742  0188               	clrf	8	;volatile
   522  0743                     l699:	
   523  0743  120A  118A  2736  120A  118A  	fcall	_init_adc
   524  0748                     l47:	
   525  0748  0008               	return
   526  0749                     __end_of_init_config:	
   527                           
   528                           	psect	text3
   529  0736                     __ptext3:	
   530 ;; *************** function _init_adc *****************
   531 ;; Defined at:
   532 ;;		line 5 in file "adc.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;		None
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		None
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0
   548 ;;      Temps:          0       0       0       0       0
   549 ;;      Totals:         0       0       0       0       0
   550 ;;Total ram usage:        0 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_init_config
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           
   560                           ;psect for function _init_adc
   561  0736                     _init_adc:	
   562  0736                     l647:	
   563                           ;incstack = 0
   564                           ; Regs used in _init_adc: []
   565                           
   566                           
   567                           ;adc.c: 8:    ADON = 1;
   568  0736  1283               	bcf	3,5	;RP0=0, select bank0
   569  0737  1303               	bcf	3,6	;RP1=0, select bank0
   570  0738  141F               	bsf	31,0	;volatile
   571                           
   572                           ;adc.c: 11:    ADFM = 1;
   573  0739  1683               	bsf	3,5	;RP0=1, select bank1
   574  073A  1303               	bcf	3,6	;RP1=0, select bank1
   575  073B  179F               	bsf	31,7	;volatile
   576  073C                     l15:	
   577  073C  0008               	return
   578  073D                     __end_of_init_adc:	
   579                           
   580                           	psect	text4
   581  0776                     __ptext4:	
   582 ;; *************** function _glow_led *****************
   583 ;; Defined at:
   584 ;;		line 16 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  adc_reg_val     2    8[COMMON] unsigned short 
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg, status,2, status,0, pclath, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   598 ;;      Params:         2       0       0       0       0
   599 ;;      Locals:         0       0       0       0       0
   600 ;;      Temps:          1       0       0       0       0
   601 ;;      Totals:         3       0       0       0       0
   602 ;;Total ram usage:        3 bytes
   603 ;; Hardware stack levels used:    1
   604 ;; Hardware stack levels required when called:    1
   605 ;; This function calls:
   606 ;;		___lwdiv
   607 ;; This function is called by:
   608 ;;		_main
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           
   613                           ;psect for function _glow_led
   614  0776                     _glow_led:	
   615  0776                     l739:	
   616                           ;incstack = 0
   617                           ; Regs used in _glow_led: [wreg+status,2+status,0+pclath+cstack]
   618                           
   619                           
   620                           ;main.c: 16:     if (loop_counter <= duty_cycle);main.c: 17:     {;main.c: 18:         R
      +                          D0 = 1;;main.c: 19:     };main.c: 20: ;main.c: 23:         RD0 = 0;
   621  0776  3001               	movlw	1
   622  0777  1283               	bcf	3,5	;RP0=0, select bank0
   623  0778  1303               	bcf	3,6	;RP1=0, select bank0
   624  0779  02A0               	subwf	glow_led@wait,f
   625  077A  3000               	movlw	0
   626  077B  1C03               	skipc
   627  077C  03A1               	decf	glow_led@wait+1,f
   628  077D  02A1               	subwf	glow_led@wait+1,f
   629  077E  0A20               	incf	glow_led@wait,w
   630  077F  1D03               	skipz
   631  0780  2F86               	goto	u200
   632  0781  0A21               	incf	glow_led@wait+1,w
   633  0782  1903               	btfsc	3,2
   634  0783  2F85               	goto	u201
   635  0784  2F86               	goto	u200
   636  0785                     u201:	
   637  0785  2F9D               	goto	l745
   638  0786                     u200:	
   639  0786                     l741:	
   640                           
   641                           ;main.c: 24:     };main.c: 25: 
   642  0786  30C4               	movlw	196
   643  0787  00A0               	movwf	glow_led@wait
   644  0788  3009               	movlw	9
   645  0789  00A1               	movwf	glow_led@wait+1
   646  078A                     l743:	
   647                           
   648                           ;main.c: 27:     {
   649  078A  300A               	movlw	10
   650  078B  00F0               	movwf	___lwdiv@divisor
   651  078C  3000               	movlw	0
   652  078D  00F1               	movwf	___lwdiv@divisor+1
   653  078E  0879               	movf	glow_led@adc_reg_val+1,w
   654  078F  00F3               	movwf	___lwdiv@dividend+1
   655  0790  0878               	movf	glow_led@adc_reg_val,w
   656  0791  00F2               	movwf	___lwdiv@dividend
   657  0792  120A  118A  27B2  120A  118A  	fcall	___lwdiv
   658  0797  0870               	movf	?___lwdiv,w
   659  0798  00FA               	movwf	??_glow_led
   660  0799  087A               	movf	??_glow_led,w
   661  079A  1283               	bcf	3,5	;RP0=0, select bank0
   662  079B  1303               	bcf	3,6	;RP1=0, select bank0
   663  079C  00A2               	movwf	glow_led@duty_cycle
   664  079D                     l745:	
   665                           
   666                           ;main.c: 30: 
   667  079D  087D               	movf	glow_led@loop_counter,w
   668  079E  0222               	subwf	glow_led@duty_cycle,w
   669  079F  1C03               	skipc
   670  07A0  2FA2               	goto	u211
   671  07A1  2FA3               	goto	u210
   672  07A2                     u211:	
   673  07A2  2FA5               	goto	l41
   674  07A3                     u210:	
   675  07A3                     l747:	
   676                           
   677                           ;main.c: 31:     loop_counter++;;main.c: 32: 
   678  07A3  1408               	bsf	8,0	;volatile
   679                           
   680                           ;main.c: 33: }
   681  07A4  2FA6               	goto	l749
   682  07A5                     l41:	
   683                           ;main.c: 35: static void init_config(void) {
   684                           
   685                           
   686                           ;main.c: 36:     PORTD = 0;;main.c: 37:     TRISD = 0x00;
   687  07A5  1008               	bcf	8,0	;volatile
   688  07A6                     l749:	
   689                           
   690                           ;main.c: 40: }
   691  07A6  3064               	movlw	100
   692  07A7  067D               	xorwf	glow_led@loop_counter,w
   693  07A8  1D03               	btfss	3,2
   694  07A9  2FAB               	goto	u221
   695  07AA  2FAC               	goto	u220
   696  07AB                     u221:	
   697  07AB  2FAD               	goto	l753
   698  07AC                     u220:	
   699  07AC                     l751:	
   700                           
   701                           ;main.c: 41: ;main.c: 42: void main(void) {
   702  07AC  01FD               	clrf	glow_led@loop_counter
   703  07AD                     l753:	
   704                           
   705                           ;main.c: 45: 
   706  07AD  3001               	movlw	1
   707  07AE  00FA               	movwf	??_glow_led
   708  07AF  087A               	movf	??_glow_led,w
   709  07B0  07FD               	addwf	glow_led@loop_counter,f
   710  07B1                     l44:	
   711  07B1  0008               	return
   712  07B2                     __end_of_glow_led:	
   713                           
   714                           	psect	text5
   715  07B2                     __ptext5:	
   716 ;; *************** function ___lwdiv *****************
   717 ;; Defined at:
   718 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c90/common/lwdiv.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;  divisor         2    0[COMMON] unsigned int 
   721 ;;  dividend        2    2[COMMON] unsigned int 
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  quotient        2    5[COMMON] unsigned int 
   724 ;;  counter         1    7[COMMON] unsigned char 
   725 ;; Return value:  Size  Location     Type
   726 ;;                  2    0[COMMON] unsigned int 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   734 ;;      Params:         4       0       0       0       0
   735 ;;      Locals:         3       0       0       0       0
   736 ;;      Temps:          1       0       0       0       0
   737 ;;      Totals:         8       0       0       0       0
   738 ;;Total ram usage:        8 bytes
   739 ;; Hardware stack levels used:    1
   740 ;; This function calls:
   741 ;;		Nothing
   742 ;; This function is called by:
   743 ;;		_glow_led
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function ___lwdiv
   749  07B2                     ___lwdiv:	
   750  07B2                     l707:	
   751                           ;incstack = 0
   752                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   753                           
   754  07B2  01F5               	clrf	___lwdiv@quotient
   755  07B3  01F6               	clrf	___lwdiv@quotient+1
   756  07B4                     l709:	
   757  07B4  0870               	movf	___lwdiv@divisor,w
   758  07B5  0471               	iorwf	___lwdiv@divisor+1,w
   759  07B6  1903               	btfsc	3,2
   760  07B7  2FB9               	goto	u121
   761  07B8  2FBA               	goto	u120
   762  07B9                     u121:	
   763  07B9  2FF1               	goto	l729
   764  07BA                     u120:	
   765  07BA                     l711:	
   766  07BA  01F7               	clrf	___lwdiv@counter
   767  07BB  0AF7               	incf	___lwdiv@counter,f
   768  07BC  2FC8               	goto	l717
   769  07BD                     l713:	
   770  07BD  3001               	movlw	1
   771  07BE                     u135:	
   772  07BE  1003               	clrc
   773  07BF  0DF0               	rlf	___lwdiv@divisor,f
   774  07C0  0DF1               	rlf	___lwdiv@divisor+1,f
   775  07C1  3EFF               	addlw	-1
   776  07C2  1D03               	skipz
   777  07C3  2FBE               	goto	u135
   778  07C4                     l715:	
   779  07C4  3001               	movlw	1
   780  07C5  00F4               	movwf	??___lwdiv
   781  07C6  0874               	movf	??___lwdiv,w
   782  07C7  07F7               	addwf	___lwdiv@counter,f
   783  07C8                     l717:	
   784  07C8  1FF1               	btfss	___lwdiv@divisor+1,7
   785  07C9  2FCB               	goto	u141
   786  07CA  2FCC               	goto	u140
   787  07CB                     u141:	
   788  07CB  2FBD               	goto	l713
   789  07CC                     u140:	
   790  07CC                     l719:	
   791  07CC  3001               	movlw	1
   792  07CD                     u155:	
   793  07CD  1003               	clrc
   794  07CE  0DF5               	rlf	___lwdiv@quotient,f
   795  07CF  0DF6               	rlf	___lwdiv@quotient+1,f
   796  07D0  3EFF               	addlw	-1
   797  07D1  1D03               	skipz
   798  07D2  2FCD               	goto	u155
   799  07D3  0871               	movf	___lwdiv@divisor+1,w
   800  07D4  0273               	subwf	___lwdiv@dividend+1,w
   801  07D5  1D03               	skipz
   802  07D6  2FD9               	goto	u165
   803  07D7  0870               	movf	___lwdiv@divisor,w
   804  07D8  0272               	subwf	___lwdiv@dividend,w
   805  07D9                     u165:	
   806  07D9  1C03               	skipc
   807  07DA  2FDC               	goto	u161
   808  07DB  2FDD               	goto	u160
   809  07DC                     u161:	
   810  07DC  2FE4               	goto	l725
   811  07DD                     u160:	
   812  07DD                     l721:	
   813  07DD  0870               	movf	___lwdiv@divisor,w
   814  07DE  02F2               	subwf	___lwdiv@dividend,f
   815  07DF  0871               	movf	___lwdiv@divisor+1,w
   816  07E0  1C03               	skipc
   817  07E1  03F3               	decf	___lwdiv@dividend+1,f
   818  07E2  02F3               	subwf	___lwdiv@dividend+1,f
   819  07E3                     l723:	
   820  07E3  1475               	bsf	___lwdiv@quotient,0
   821  07E4                     l725:	
   822  07E4  3001               	movlw	1
   823  07E5                     u175:	
   824  07E5  1003               	clrc
   825  07E6  0CF1               	rrf	___lwdiv@divisor+1,f
   826  07E7  0CF0               	rrf	___lwdiv@divisor,f
   827  07E8  3EFF               	addlw	-1
   828  07E9  1D03               	skipz
   829  07EA  2FE5               	goto	u175
   830  07EB                     l727:	
   831  07EB  3001               	movlw	1
   832  07EC  02F7               	subwf	___lwdiv@counter,f
   833  07ED  1D03               	btfss	3,2
   834  07EE  2FF0               	goto	u181
   835  07EF  2FF1               	goto	u180
   836  07F0                     u181:	
   837  07F0  2FCC               	goto	l719
   838  07F1                     u180:	
   839  07F1                     l729:	
   840  07F1  0876               	movf	___lwdiv@quotient+1,w
   841  07F2  00F1               	movwf	?___lwdiv+1
   842  07F3  0875               	movf	___lwdiv@quotient,w
   843  07F4  00F0               	movwf	?___lwdiv
   844  07F5                     l413:	
   845  07F5  0008               	return
   846  07F6                     __end_of___lwdiv:	
   847  007E                     btemp	set	126	;btemp
   848  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      0       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_glow_led
    _glow_led->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     458
                                             11 COMMON     2     2      0
                           _glow_led
                        _init_config
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             4     2      2      23
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                           _init_adc
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _glow_led                                             3     1      2     412
                                              8 COMMON     3     1      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _glow_led
     ___lwdiv
   _init_config
     _init_adc
   _read_adc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Jul  1 09:40:28 2020

                     l21 075A                       l15 073C                       l41 07A5  
                     l18 074C                       l44 07B1                       l47 0748  
                     _GO 00FA                      l413 07F5                      l711 07BA  
                    l721 07DD                      l713 07BD                      l723 07E3  
                    l715 07C4                      l707 07B2                      l725 07E4  
                    l717 07C8                      l709 07B4                      l741 0786  
                    l733 0749                      l727 07EB                      l719 07CC  
                    l751 07AC                      l743 078A                      l647 0736  
                    l735 0750                      l729 07F1                      l753 07AD  
                    l745 079D                      l747 07A3                      l739 0776  
                    l755 075B                      l749 07A6                      l757 0760  
                    l759 0769                      l697 073D                      l699 0743  
                    _RD0 0040                      u120 07BA                      u200 0786  
                    u121 07B9                      u201 0785                      u210 07A3  
                    u211 07A2                      u140 07CC                      u220 07AC  
                    u141 07CB                      u221 07AB                      u135 07BE  
                    u160 07DD                      u161 07DC                      u155 07CD  
                    u180 07F1                      u181 07F0                      u165 07D9  
                    u190 0750                      u175 07E5                      u191 074F  
                   _ADFM 04FF                     _ADON 00F8                     _main 075B  
                   btemp 007E                     start 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000          __end_of___lwdiv 07F6             ?_init_config 0070  
                  _PORTD 0008                    _TRISD 0088                    _nDONE 00FA  
                  status 0003                    wtemp0 007E          __initialization 07F6  
           __end_of_main 0776                   ??_main 007B                   _ADRESH 001E  
                 _ADRESL 009E                ??___lwdiv 0074         __end_of_glow_led 07B2  
       __end_of_init_adc 073D         __end_of_read_adc 075B  __end_of__initialization 07FC  
         __pcstackCOMMON 0070     glow_led@loop_counter 007D     __size_of_init_config 000C  
             __pbssBANK0 0020               __pmaintext 075B             glow_led@wait 0020  
              ?_glow_led 0078                ?_init_adc 0070                ?_read_adc 0070  
                ___lwdiv 07B2                  __ptext1 0749                  __ptext2 073D  
                __ptext3 0736                  __ptext4 0776                  __ptext5 07B2  
   end_of_initialization 07FC               ??_glow_led 007A               ??_init_adc 0070  
             ??_read_adc 0072          main@adc_reg_val 007B       glow_led@duty_cycle 0022  
    start_initialization 07F6            ??_init_config 0070              __pbssCOMMON 007D  
              ___latbits 0002        __size_of_glow_led 003C        __size_of_init_adc 0007  
      __size_of_read_adc 0012         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
    read_adc@adc_reg_val 0072         ___lwdiv@quotient 0075      __end_of_init_config 0749  
    glow_led@adc_reg_val 0078         __size_of___lwdiv 0044              _init_config 073D  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 _glow_led 0776  
               _init_adc 0736                 _read_adc 0749            __size_of_main 001B  
