Skip to main content
LMS
LMS
Advanced C: 22038
Started on	Saturday, 25 February 2023, 10:50 PM
State	Finished
Completed on	Sunday, 26 February 2023, 12:50 AM
Time taken	2 hours
Grade	67.00 out of 100.00
Question 1
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

        const char *p = "hello";

        *p = "H";

        printf("%s", p);

} 




a.
Segmentation fault

b.
Hello


c.
Compiler Error


d.
hello

Feedback
Your answer is correct.
The correct answer is:
Compiler Error

Question 2
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

    const char *callCausal();

    *callCausal() = 'c';

    return 0;

}

const char *callCausal()

{

    return "Causal Call";

} 


a.
Run time error


b.
Nothing will be printed


c.
No errors


d.
Compiler error
Feedback
Your answer is correct.
The correct answer is: Compiler error
Question 3
Correct
Mark 2.00 out of 2.00
Not flaggedFlag question
Question text
Consider the given 1d array as 2d array (with 2 cols) and find transpose.

int num[6] = {2, 8, 7, 6, 0, 9};  


a.
transpose = {2, 8, 7, 9, 0, 6};


b.
transpose = {2, 7, 0, 8, 6, 9};


c.
transpose = {2, 6, 8, 0, 7, 9};


d.
transpose = {2, 0, 9, 6, 8, 7};

Feedback
Your answer is correct.
The correct answer is:
transpose = {2, 7, 0, 8, 6, 9};

Question 4
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
Comment on the following?

int (*ptr[4])(); 


a.
ptr is a pointer to array


b.
ptr is an array of pointers to function


c.
ptr is pointer to array of functions


d.
ptr is a pointer to function

Feedback
Your answer is incorrect.
The correct answer is:
ptr is an array of pointers to function

Question 5
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

    char *arr[4];

    unsigned long a = sizeof(*arr) / sizeof(char*);

    printf("%ld\n", a);

} 


a.
2


b.
4


c.
1


d.
0

Feedback
Your answer is incorrect.
The correct answer is:
1

Question 6
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
How to call a function without using the function name to send parameters ?

a.
typedefs


b.
Function pointer


c.
Both typedefs and Function pointer


d.
Not possible

Feedback
Your answer is incorrect.
The correct answer is:
Function pointer

Question 7
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
Which of the following is not possible in C?


a.
Array of function pointer


b.
Returning a function pointer


c.
Comparison of function pointer


d.
None of the mentioned

Feedback
Your answer is correct.
The correct answer is:
None of the mentioned

Question 8
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
Which of the following function with ellipsis are illegal?


a.
void func(...)


b.
void func(int, ...);


c.
void func(int, int, ...);


d.
None of the mentioned

Feedback
Your answer is correct.
The correct answer is:
void func(...)

Question 9
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
Which header file includes a function for variable number of arguments?


a.
both stdlib.h and stdarg.h


b.
ctype.h


c.
stdarg.h


d.
stdlib.h

Feedback
Your answer is correct.
The correct answer is:
stdarg.h

Question 10
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
Consider the following code, which statement will print "Emertxe"

char * ptr[3]= {"Emertxe","Extreme","Excellent"}; 


a.
printf("%s",*(ptr+1));


b.
printf("%s", *(ptr+2));


c.
printf("%s", *ptr);


d.
printf("%s", *ptr[0]);

Feedback
Your answer is correct.
The correct answer is:
printf("%s", *ptr);

Question 11
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is the output of the following code (assume i address is 1000) ?

int main()

{

    int ***r, **q, *p, i = 10;

    p = &i;

    q = &p;

    r = &q;

    printf("%d, %d, %d\n", *p, **q, ***r);

    return 0;

}


a.
1000, 1000, 1000


b.
1000, 1008, 1016


c.
1000, 1004, 1008


d.
10, 10, 10

Feedback
Your answer is correct.
The correct answer is:
10, 10, 10

Question 12
Correct
Mark 2.00 out of 2.00
Not flaggedFlag question
Question text
Declare the following statement?"An array of three pointers to chars"


a.
char *ptr[3]


b.
char (*ptr[3])()


c.
char *ptr[3][3]()


d.
char **ptr[3]

Feedback
Your answer is correct.
The correct answer is:
char *ptr[3]

Question 13
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
Consider the following code snippet: How would you access the elements of the array using p?

void main()

{

    int i, j;

    int (*p)[3];

    p = (int(*)[3]) malloc(3 * sizeof(*p));

} 

 


a.
for (i = 0; i < 3; i++)

{

		printf("%d", p[i]);

}


b.
for (i = 0; i < 3; i++) 

{ 

		for (j = 0; j &lt; 3; j++) 

				printf("%d", p[i + j]); 

}


c.
for (j = 0; j < 3; j++)

{

		printf("%d", p[i][j]);

}


d.
for (i = 0; i < 3; i++)

{

		for (j = 0; j < 3; j++)

				printf("%d", p[i][j]);

}


e.
for (int i = 0; i > 3; i++)

{

		for (int j = 0; j < 3; j++)

				printf("%d ", *(*(p + i) + j));

}

Feedback
Your answer is incorrect.
The correct answer is:
for (i = 0; i < 3; i++)

{

		for (j = 0; j < 3; j++)

				printf("%d", p[i][j]);

}

Question 14
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
p = calloc (m,n) is equivalent to


a.
p = malloc (m); memset(p,0,m*n);


b.
p = malloc (m*n); memset(p,0,m);


c.
p = malloc (m*n); memset(p,1,n);


d.
p = malloc (m*n); memset(p,0,m*n);

Feedback
Your answer is correct.
The correct answer is:
p = malloc (m*n); memset(p,0,m*n);

Question 15
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int add(int a, int b, int c)

{

    return a + b + c;

}

void main()

{

    int (*function_pointer)(int, int, int);

    function_pointer = add;

    printf("The additon of three numbers is:%d", (*function_pointer)(2, -3, 4));

}


a.
The additon of three numbers is:3


b.
Run time error


c.
Compiler Error


d.
The additon of three numbers is:5

Feedback
Your answer is correct.
The correct answer is:
The additon of three numbers is:3

Question 16
Correct
Mark 2.00 out of 2.00
Not flaggedFlag question
Question text
What is output of the following code?

void main()

{

    int a[3] = {3, 2, 1};

    int *p = a;

    int **r = &p;

    *r++;

    printf("%d", (**p));

}


a.
Address of a


b.
Compile time error


c.
3


d.
Junk value

Feedback
Your answer is correct.
The correct answer is:
Compile time error

Question 17
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

void f(int a[][2])

{

    a[1][0] = 4;

    int i = 0, j = 0;

    for (i = 0;i < 3; i++)

        for (j = 0;j < 2; j++)

            printf(" %d", a[i][j]);

}

void main()

{

    int a[3][2] = {{0,0}};

    f(a);

}


a.
Segmentation fault


b.
junk junk 4 junk junk junk


c.
0 0 4 0 0 0


d.
Compiler Error

Feedback
Your answer is correct.
The correct answer is:
0 0 4 0 0 0

Question 18
Not answered
Marked out of 2.00
Not flaggedFlag question
Question text
What is the expected answer for this code (assume little endian system)?

int main()

{

    int idx;

    unsigned int val = 0x42434445;

    void *p = &val;

    for(idx = 0; idx < sizeof(int); idx++)

    {

        printf("%c", *(char *)p++);

    }

    return 0;

}


a.
EDCB


b.
1234


c.
BCDE


d.
ABCD

Feedback
Your answer is incorrect.
The correct answer is:
EDCB

Question 19
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

    char memory[10] = "malloc(2)";

    char const *p = memory;

    *p = 'c';

    printf("%s\n", memory);

    return 0;

}


a.
malloc(2)


b.
calloc(2)


c.
Compiler error. Cannot change p which is const


d.
cmalloc

Feedback
Your answer is incorrect.
The correct answer is:
Compiler error. Cannot change p which is const

Question 20
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

#include <stdarg.h>

void func(int, ...);

int main()

{

    func(2, 3, 5, 7, 11, 13);

    return 0;

}

void func(int n, ...)

{

    int number, i = 0;

    va_list start;

    va_start(start, n);

    while (i != 4)

    {

        number = va_arg(start, int);

        i++;

    }

    printf("%d", number);

} 


a.
3


b.
11


c.
7


d.
5

Feedback
Your answer is correct.
The correct answer is:
11

Question 21
Incorrect
Mark 0.00 out of 3.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{   

    int *p = f();

    printf("%d\n", *p);

}   

int *f()

{   

    int *j = (int*)malloc(sizeof(int)*2);

    *j = 15; 

    return j;

} 


a.
Undefined Behavior


b.
15


c.
Compiler error


d.
Runtime error
Feedback
Your answer is incorrect.
The correct answer is:
Compiler error

Question 22
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int mul(int a, int b, int c)

{

    return a * b * c;

}

void main()

{

    int (function_pointer *)(int, int, int);

    function_pointer = mul;

    printf("The product of three numbers is:%d", function_pointer(3, 4, 5));

} 


a.
Segmentation fault


b.
The product of three numbers is:60


c.
Nothing will be printed


d.
Compile time error

Feedback
Your answer is incorrect.
The correct answer is:
Compile time error

Question 23
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

#include <stdio.h>

int main()

{

    char *p = (int *)NULL;

    if (p)

        printf(" NULL ");

    else

        printf("nullp");

} 


a.
Compiler error


b.
Runtime error


c.
nullp


d.
NULL

Feedback
Your answer is incorrect.
The correct answer is:
nullp

Question 24
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

    char a[5][5], flag;

    a[0][0] = '0';

    flag = ((a == *a) && (*a == a[1]));

    printf("%d\n", flag);

    return 0;

}


a.
Compiler error


b.
1


c.
0


d.
Runtime error

Feedback
Your answer is correct.
The correct answer is:
0

Question 25
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

void fun(int **p);

int main()

{

    int a[3][4] = {1, 2, 3, 4, -4, -3, -2, 1, 7, 5, 6, 12};

    int *ptr;

    ptr = &a[1][1];

    fun(&ptr);

    return 0;

}

void fun(int **p)

{

    printf("%d\n", **p);

}


a.
-2


b.
-3


c.
Runtime Error


d.
1

Feedback
Your answer is correct.
The correct answer is:
-3

Question 26
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
If no arguments passed through command line, then what is the value of argc _________ 


a.
-1


b.
1


c.
2


d.
0

Feedback
Your answer is correct.
The correct answer is:
1

Question 27
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
Assume that the first printf() function gives the output as 1000. What would be the output of the second printf() function?

#include <malloc.h>

int main()

{

    int *p;

    p = (int *) malloc(20 * 1);

    printf("%lu\n", p);

    free(p);

    printf("%lu", p);

    return 0;

}


a.
0


b.
1000


c.
Segmentation fault

d.
Garbage value

Feedback
Your answer is correct.
The correct answer is:
1000

Question 28
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

        short testarray[5][7] = { {1}, {2, 3}, {4, 5, 6} };

        printf( "%d\n", sizeof( testarray ) );

        return 0;

}



a.
Compiler Error

b.
35

c.
70

d.
50
Feedback
Your answer is correct.
The correct answer is: 70
Question 29
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
Which of the following is the correct output for the program given below?

int main()

{

        static int a[] = {0, 1, 2, 3, 4};

        static int *p[] = {a+2, a, a+4, a+3, a+1};

        int **ptr;

        ptr = p;

        **++ptr;

        printf("%d %d", **ptr, ptr + p);

        return 0;

}  


a.
0 1


b.
1 0


c.
0 3


d.
Compiler Error

Feedback
Your answer is correct.
The correct answer is:
Compiler Error

Question 30
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

    int *num = 10;

    void *ptr = num;

     ptr++;

     printf("%d\n", ptr);

    return 0;

} 


a.
11


b.
10


c.
14


d.
Compiler Error

Feedback
Your answer is incorrect.
The correct answer is:
11

Question 31
Correct
Mark 3.00 out of 3.00
Not flaggedFlag question
Question text
What is the output of the following code?

int main()

{

    static char *s[] = {"black", "white", "pink", "violet"};

    char **ptr[] = {s+3, s+2, s+1, s}, ***p;

    p = ptr;

    ++p;

    printf("%s", **p+1);

    return 0;

}


a.
ite


b.
ack


c.
ink


d.
let

Feedback
Your answer is correct.
The correct answer is:
ink

Question 32
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

void first()

{

    printf("World");

}

void main()

{

    void *ptr() = first;

    ptr++;

    ptr();

} 

 


a.
Illegal application of ++ to void data type


b.
pointer function initialized like a variable


c.
Illegal application of ++ to void data type & pointer function initialized like a variable


d.
None of the mentioned

Feedback
Your answer is incorrect.
The correct answer is:
Illegal application of ++ to void data type & pointer function initialized like a variable

Question 33
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
Which one of the following statements allow the variable being pointed to be changed?


a.
int *const ptr


b.
const * int ptr


c.
const int * const ptr


d.
const int *ptr

Feedback
Your answer is correct.
The correct answer is:
int *const ptr

Question 34
Incorrect
Mark 0.00 out of 2.00
Not flaggedFlag question
Question text
realloc(ptr, size), where size is zero means


a.
Undefined behaviour


b.
Free the memory pointed to by ptr


c.
Doesn't do any reallocation of ptr i.e. no operation


d.
Allocate a memory location with zero length

Feedback
Your answer is incorrect.
The correct answer is:
Free the memory pointed to by ptr

Question 35
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What does argc and argv indicate in command-line arguments?Assuming: int main(int argc, char *argv[]) )


a.
argument control, argument vector


b.
argument count, argument variable


c.
argument control, argument variable


d.
argument count, argument vector

Feedback
Your answer is correct.
The correct answer is:
argument count, argument vector

Question 36
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

        char * const p = "hi";

        p[0] = 'H';

        printf("%s", p);

} 


a.
hi


b.
Hi


c.
Segmentation fault


d.
Compiler Error

Feedback
Your answer is correct.
The correct answer is:
Segmentation fault

Question 37
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What would be the equivalent pointer expression for referring the array element a[i][j][k][l] ?


a.
*(*(*(*(a+i)+j)+k)+l)

b.
*((((a+i)+j)+k)+l)


c.
*(*((a+i)+j)+k+l)

d.
*(*(a+i)+j+k+l)
Feedback
Your answer is correct.
The correct answer is: *(*(*(*(a+i)+j)+k)+l)
Question 38
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code? (Assume  command line arguments are  ./a.out  1  2  3)  

int main(int argc, char *argv[])

{

        printf("%d\n", argc);

        return 0;

}


a.
1 2 3


b.
4


c.
Depends on the compiler


d.
3

Feedback
Your answer is correct.
The correct answer is:
4

Question 39
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
Can you combine the following two statements into one?

char *p;

p = (char*) malloc(100);


a.
char *p = (char *)(malloc*)(100)


b.
char *p = (char) malloc(100)


c.
char p = *malloc(100)


d.
char *p = (char*)malloc(100)

Feedback
Your answer is correct.
The correct answer is:
char *p = (char*)malloc(100)

Question 40
Correct
Mark 2.00 out of 2.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{ 

    int a = 10; 

    int * const p = &a; 

    *p = 20; 

    printf("%d", *p); 

    return 0; 

}


a.
Any address


b.
20


c.
Compiler error 


d.
10

Feedback
Your answer is correct.
The correct answer is:
20

Question 41
Correct
Mark 2.00 out of 2.00
Not flaggedFlag question
Question text
malloc initialises memory with all bits set to zero.


a.
TRUE


b.
FALSE


c.
Depends on the standard


d.
Depends on the compiler

Feedback
Your answer is correct.
The correct answer is:
FALSE

Question 42
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
int myArr[4][5][6].Type of myArr[0] is:


a.
Array [5] of Array [6] of int


b.
Pointer to Array [5] of Array [6] of int


c.
Array [6] of Array [5] of int


d.
Pointer to Array [4] of int

Feedback
Your answer is correct.
The correct answer is:
Pointer to Array [5] of Array [6] of int

Question 43
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

void f(int (*x)(int));

int myfoo(int);

int (*fooptr)(int);

int ((*foo(int)))(int);

int main()

{

    fooptr = foo(1);

    fooptr(8);

}

int ((*foo(int i)))(int)

{

    return myfoo;

}

int myfoo(int i)

{

    printf("%d\n", i - 1);

} 


a.
7


b.
9


c.
Undefined behaviour


d.
Compile time error

Feedback
Your answer is incorrect.
The correct answer is:
7

Question 44
Correct
Mark 2.00 out of 2.00
Not flaggedFlag question
Question text
Programmer wants to increase the previously allocated memory. 

If new memory block is allocated by realloc then which statement is true for old pointer.


a.
realloc will return same old pointer.


b.
User should free the old pointer.


c.
Old pointer will be freed by realloc function.


d.
The old pointer must be preserved as user might need it in future.

Feedback
Your answer is correct.
The correct answer is:
Old pointer will be freed by realloc function.

Question 45
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
Each call of va_arg _______


a.
Returns one argument


b.
Steps va_list variable to the next


c.
Returns one argument &  Steps va_list variable to the next


d.
Returns address of argument &  Steps va_list address to the next

Feedback
Your answer is correct.
The correct answer is:
Returns one argument &  Steps va_list variable to the next

Question 46
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?(Assume CLA is ./a.out)

int main(int argc, char *argv[])

{

    printf("%s\n", argv[argc*0]);

    return 0;

}  


a.
Segmentation fault/code crash


b.
Depends on the compiler


c.
Compiler Error


d.
Executable file name

Feedback
Your answer is correct.
The correct answer is:
Executable file name

Question 47
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int callPoint(void);

void print(int,int(*)());

int i = 10; 

int main()

{

        int i=20;

        print(i, callPoint);

}

void print(int i,int (*callPointOne)())

{

        printf("%d\n",(* callPointOne)());

}

int callPoint(void)

{

        return(i-=5);

}


a.
Runtime error


b.
Compiler error


c.
10


d.
5

Feedback
Your answer is correct.
The correct answer is:
5

Question 48
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

void print_arr(float *p[3])

{

    printf(" 0 %f 1 %f 2 %f\n",p[0][0],p[0][1],p[0][2]);

}

void main()

{

    float arr[2][3] = {{0,1},{3,4,5}};

    float **fl_arr;

    fl_arr = (float **)arr;

    print_arr(fl_arr);

    (**fl_arr)++;

    print_arr(fl_arr);

}  


a.
0 0 1 1 2 2 3 3 4 4 5 5


b.
0 1 2 3 4 5


c.
0 0 1 1 2 2 0 3 0 4 0 5


d.
Segmentation fault

Feedback
Your answer is correct.
The correct answer is:
Segmentation fault

Question 49
Incorrect
Mark 0.00 out of 3.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

    static char*s[] = {"white", "yellow", "violet", "black"};

    char **ptr[] = {s + 3, s + 2, s + 1, s}, ***p;

    p = ptr;

    **++p;

    printf("%s", *--*++p + 6);

    return 0;

}


a.
yellow


b.
violet


c.
black


d.
Compiler error

Feedback
Your answer is incorrect.
The correct answer is:
yellow

Question 50
Not answered
Marked out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

void display_arr(int (*ptr)[4])

{

    printf("%d %d %d %d ", ptr[0][0], ptr[0][1], ptr[0][2], ptr[0][3]);

}

void main()

{

    int arr[3][4] = {{0, 1, 2, 3}, {4, 5, 6, 7}, {8, 9, 10, 11}};

    int (*int_arr)[4];

    int_arr = arr;

    display_arr(int_arr);

    int_arr++;

    int_arr++;

    display_arr(int_arr);

}  


a.
0 1 2 3 8 9 10 11


b.
0 1 2 3 4 5 6 7


c.
Runtime Error


d.
0 1 2 3 junk junk junk junk

Feedback
Your answer is incorrect.
The correct answer is:
0 1 2 3 8 9 10 11

Question 51
Correct
Mark 3.00 out of 3.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

    int a = 9, b = 8, c = 10;

    int *arr[3] = {&a, &b, &c};

    printf("%d", *arr[*arr[1] - 8]);

}


a.
10


b.
11


c.
Compiler error


d.
9
Feedback
Your answer is correct.
The correct answer is: 9
Question 52
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
Among the below options, which is the correct way to pass a function pointer to arguments


a.
void transport (*fptr) {}


b.
void transport (*fptr (int, float, char)){}


c.
void transport(int (*fptr) (int, float, char)) {}


d.
void transport (int (*fptr) ){}

Feedback
Your answer is incorrect.
The correct answer is:
void transport(int (*fptr) (int, float, char)) {}

Question 53
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

    int i, numbers[2];

    numbers[0] = 9;

    free(&numbers[1]);

    printf("\nnumbers[%d] = %d ", 0, numbers[0]);

    return 0;

}


a.
numbers[0] = 9


b.
numbers[0] = 0


c.
Compiler Error


d.
Runtime Error

Feedback
Your answer is incorrect.
The correct answer is:
Runtime Error

Question 54
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
Which function is not called in the following C program?

void first()

{

    printf("first");

}

void second()

{

    first();

}

void third()

{

    second();

}

void main()

{

    void (*ptr)();

    ptr = third;

    ptr();

}


a.
Function first


b.
Function second


c.
Function third


d.
None of the mentioned

Feedback
Your answer is correct.
The correct answer is:
None of the mentioned

Question 55
Incorrect
Mark 0.00 out of 2.00
Not flaggedFlag question
Question text
What is the expected answer for this code?

void foo(int **p);

int main()

{   

    int i = 97, *p = &i; 

    foo(&p);

    printf("%d ", *p);

    return 0;

}   

void foo(int **p)

{   

    static int j = 2;

    *p = &j; 

    printf("%d ", **p);

}


a.
None of the above


b.
2, 2

c.
Error


d.
2, 97

Feedback
Your answer is incorrect.
The correct answer is: 2, 2
Question 56
Correct
Mark 3.00 out of 3.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{   

    int i = 3; 

    int *p = &i; 

    foo(&p);

    printf("%d ", *p);

}   

void foo(const *int *p) 

{   

    int j = **p * **p; 

    **p = j; 

    printf("%d ", **p);

}


a.
Compile time Error


b.
9 9


c.
9 3


d.
3 3
Feedback
Your answer is correct.
The correct answer is:
Compile time Error

Question 57
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

void f(int (*x)(int));

int myfoo(int i);

int (*foo)(int) = myfoo;

int main()

{

    f(foo(10));

}

void f(int (*i)(int))

{

    i(15);

}

int myfoo(int i)

{

    printf("%d\n", i);

    return i;

} 


a.
Undefined behaviour


b.
10 10


c.
10 Segmentation fault


d.
Compile time error

Feedback
Your answer is correct.
The correct answer is:
10 Segmentation fault

Question 58
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

void main()

{

    int a[2][3] = {, 1, 2, 3, 4, 5};

    int i = 0, j = 0;

    for (i = 0; i < 2; i++)

        for (j = 0; j < 3; j++)

            printf("%d", a[i][j]);

}


a.
0 1 2 3 4 5


b.
Compile time error


c.
junk 1 2 3 4 5


d.
1 2 3 3 4 5

Feedback
Your answer is incorrect.
The correct answer is:
Compile time error

Question 59
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is argv[0] in command line arguments?


a.
The name by which the program was invoked


b.
The name of the files which are passed to the program


c.
Count of the arguments in argv[] vector


d.
None of the mentioned

Feedback
Your answer is correct.
The correct answer is:
The name by which the program was invoked

Question 60
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
While collecting the command line arguments, what is the second argument in main function?


a.
The number of command-line arguments the program 


b.
A pointer to an array of character string's that contain the arguments, one per string


c.
Environmental Variable


d.
None of the mentioned

Feedback
Your answer is correct.
The correct answer is:
A pointer to an array of character string's that contain the arguments, one per string

Question 61
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

    char (*p)[10];

    printf("%d %d\n",sizeof(*p),sizeof(p));

} 


a.
8 10


b.
40 8


c.
10 8


d.
8 40

Feedback
Your answer is correct.
The correct answer is:
10 8

Question 62
Correct
Mark 2.00 out of 2.00
Not flaggedFlag question
Question text
What does the following declaration mean?

int *ptr[10];


a.
ptr is a pointer to an array of 10 integers


b.
ptr is array of pointers to 10 integers


c.
ptr is an pointer to array


d.
ptr is an array of 10 integers

Feedback
Your answer is correct.
The correct answer is:
ptr is array of pointers to 10 integers

Question 63
Incorrect
Mark 0.00 out of 3.00
Not flaggedFlag question
Question text
What is output of the following code?

int main() 

{ 

    short arr[3][2] = {3, 6, 9, 12, 15, 18}; 

    printf("%d  %d\n", *(arr + 2)[1], **(arr + 2)); 

} 

 


a.
15 15


b.
18 15


c.
0 15


d.
Compiler error
Feedback
Your answer is incorrect.
The correct answer is:
0 15

Question 64
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
Comment on the pointer declaration

const int *ptr; 


a.
You cannot change the value pointed by ptr


b.
You cannot change address contained in ptr


c.
You cannot change value and address


d.
You can change the value pointed by ptr

Feedback
Your answer is correct.
The correct answer is:
You cannot change the value pointed by ptr

Question 65
Incorrect
Mark 0.00 out of 1.00
Not flaggedFlag question
Question text
What is the expected answer for this code?

int main()

{

    int i = 15;

    void *p = &i;

    printf("%d\n", (int)*p);

    return 0;

}



a.
Runtime error

b.
15

c.
Address of i

d.
Compiler error
Feedback
Your answer is incorrect.
The correct answer is: Compiler error
Question 66
Correct
Mark 2.00 out of 2.00
Not flaggedFlag question
Question text
What is the output of count function?

int count(const char *s)

{

    const char *p = s;

    while(*(++s));

    return (s-p);

}


a.
return length including null character


b.
can't take difference of pointers


c.
infininte loop


d.
return length of string

Feedback
Your answer is correct.
The correct answer is:
return length of string

Question 67
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
Which of the following is a correct syntax to pass a Function Pointer as an argument?


a.
void pass(*fptr){}


b.
void pass(*fptr(int, float, char)){}


c.
void pass(int (*fptr)(int, float, char)){}


d.
void pass(int (*fptr)){}

Feedback
Your answer is correct.
The correct answer is:
void pass(int (*fptr)(int, float, char)){}

Question 68
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is the correct prototype for the function fun

int main()

{

    int a[4][3];

    fun(a, 4);

    return 0;

}



a.
void fun(int *p[3], int rows

b.
void fun(int p[][3], int rows);

c.
void fun(int *p[][3], int rows);

d.
void fun(int *p[4][3], int rows);
Feedback
Your answer is correct.
The correct answer is: void fun(int p[][3], int rows);
Question 69
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

    int a = 15;

    int **c -= &&c;

}


a.
You cannot apply any arithmetic operand to a pointer.


b.
We don't have address of an address operator


c.
Both A and B are correct

Feedback
Your answer is correct.
The correct answer is:
We don't have address of an address operator

Question 70
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is (void*)0?


a.
Representation of '\0'


b.
Illegal


c.
Representation of void pointer


d.
Representation of NULL pointer
Feedback
Your answer is correct.
The correct answer is: Representation of NULL pointer
Question 71
Not answered
Marked out of 3.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

        char *svar[]={ "1128","71111","5349","2131"};

        char **pvar;

        pvar=svar;

        printf("%s ",++*pvar);

        printf("%s ",*pvar++);

        printf("%s ",++*pvar);

        return 0;

}



a.
1128 71111 349

b.
128 128 1111

c.
71111 71111 349

d.
Segmentation fault
Feedback
Your answer is incorrect.
The correct answer is: 128 128 1111
Question 72
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
In a variable length argument function, the declaration "..." can _______

a.
Only appear at the end of an argument list

b.
Only appear at the beginning of an argument list


c.
Appear anywhere in the function declaration

d.
None of the mentioned

Feedback
Your answer is correct.
The correct answer is: Only appear at the end of an argument list
Question 73
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
The type va_list in an argument list is used ________


a.
There is no such type


b.
To declare a variable that will refer to each argument in turn


c.
To create a list


d.
For cleanup

Feedback
Your answer is correct.
The correct answer is:
To declare a variable that will refer to each argument in turn

Question 74
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
What is output of the following code?

int main()

{

    int *a;

    a=(int*)malloc(sizeof(int));

    *a=100;

    printf("%d \n",*a);

    free(a);

    a=(int*)malloc(sizeof(int));

    *a=200;

    printf("%d\n", *a);

}


a.
Segmentation fault


b.
a is a Dangling pointer


c.
100 200


d.
Compiler Error


e.
100 Junk_value

Feedback
Your answer is correct.
The correct answer is:
100 200

Question 75
Correct
Mark 1.00 out of 1.00
Not flaggedFlag question
Question text
The operator used to get value at address stored in a pointer variable is


a.
.


b.
*


c.
->


d.
&

Feedback
Your answer is correct.
The correct answer is:
*

Skip <span id="mod_quiz_navblock_title">Quiz navigation</span>
Quiz navigation
Show one page at a time
